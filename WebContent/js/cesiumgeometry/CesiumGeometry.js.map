{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b62b72d73a8a3d90f005","webpack:///external \"Cesium\"","webpack:///./Source/Core/util.js","webpack:///./Source/Sensor/RectangularSensor/RectangularSensorPrimitive.js","webpack:///./Source/Sensor/ConicArcSensor/ConicArcSensorGeometry.js","webpack:///./Source/Sensor/ConicArcSensor/ConicArcSensorOutlineGeometry.js","webpack:///./Source/Sensor/ConicArcSensor/ConicArcSensorGraphics.js","webpack:///./Source/cesiumGeometry.js","webpack:///./Source/Sensor/Sensor.js","webpack:///./Source/Sensor/RectangularSensor/shaders/RectangularSensorVS.glsl","webpack:///./Source/Sensor/RectangularSensor/shaders/RectangularSensorFS.glsl","webpack:///./Source/Sensor/RectangularSensor/shaders/RectangularSensor.glsl","webpack:///./Source/Sensor/RectangularSensor/shaders/RectangularSensorScanPlaneFS.glsl","webpack:///./Source/Sensor/RectangularSensor/RectangularSensorGraphics.js","webpack:///./Source/Sensor/RectangularSensor/RectangularSensorVisualizer.js","webpack:///./Source/Core/remove-primitive.js","webpack:///./Source/Sensor/ConicArcSensor/ConicArcSensorCollection.js","webpack:///./Source/Sensor/ConicArcSensor/ConicArcSensor.js","webpack:///./Source/Material/Material.js","webpack:///./Source/Material/MaterialProperty/PolylineAttackLinkMaterialProperty.js","webpack:///./Source/Material/MaterialProperty/PolylineArrowLinkMaterialProperty.js","webpack:///./Source/Material/MaterialProperty/PolylineGlowLinkMaterialProperty.js","webpack:///./Source/Material/MaterialProperty/PolylinePulseLinkMaterialProperty.js","webpack:///./Source/Material/MaterialProperty/PolylineTrailLinkMaterialProperty.js","webpack:///./Source/Material/MaterialProperty/PolylineTrailMaterialProperty.js","webpack:///./Source/Material/MaterialProperty/ElliposidFadeMaterialProperty.js","webpack:///./Source/Material/Shaders/polylineLinkMaterial.glsl","webpack:///./Source/Material/Shaders/polylinePulseMaterial.glsl","webpack:///./Source/Material/Shaders/polylineGlowMaterial.glsl","webpack:///./Source/Material/Shaders/polylineTrailMaterial.glsl","webpack:///./Source/Material/Shaders/ElliposidFadeMaterial.glsl","webpack:///./Source/Core/getLinkedPointList.js"],"names":["util","cesiumScriptRegex","getBaseUrlFromCesiumScript","scripts","document","getElementsByTagName","i","len","length","src","getAttribute","result","exec","undefined","baseUrl","getBaseUrl","BoundingSphere","Cartesian3","Color","combine","ComponentDatatype","defaultValue","defined","defineProperties","destroyObject","DeveloperError","Matrix4","PrimitiveType","Buffer","BufferUsage","DrawCommand","Pass","RenderState","ShaderProgram","ShaderSource","VertexArray","BlendingState","CullFace","Material","SceneMode","VertexFormat","CesiumMath","Math","Matrix3","JulianDate","BoxGeometry","EllipsoidGeometry","sin","cos","tan","atan","asin","attributeLocations","position","normal","RectangularSensorPrimitive","options","self","EMPTY_OBJECT","show","slice","modelMatrix","clone","_modelMatrix","_computedModelMatrix","_computedScanPlaneModelMatrix","radius","Number","POSITIVE_INFINITY","_radius","xHalfAngle","_xHalfAngle","yHalfAngle","_yHalfAngle","lineColor","WHITE","showSectorLines","showSectorSegmentLines","showLateralSurfaces","material","fromType","ColorType","_material","_translucent","lateralSurfaceMaterial","_lateralSurfaceMaterial","_lateralSurfaceTranslucent","showDomeSurfaces","domeSurfaceMaterial","_domeSurfaceMaterial","showDomeLines","showIntersection","intersectionColor","intersectionWidth","showThroughEllipsoid","_showThroughEllipsoid","showScanPlane","scanPlaneColor","scanPlaneMode","scanPlaneRate","_scanePlaneXHalfAngle","_scanePlaneYHalfAngle","_time","now","_boundingSphere","_boundingSphereWC","_sectorFrontCommand","owner","primitiveType","TRIANGLES","boundingVolume","_sectorBackCommand","_sectorVA","_sectorLineCommand","LINES","_sectorLineVA","_sectorSegmentLineCommand","_sectorSegmentLineVA","_domeFrontCommand","_domeBackCommand","_domeVA","_domeLineCommand","_domeLineVA","_scanPlaneFrontCommand","_scanPlaneBackCommand","_scanRadialCommand","_colorCommands","_frontFaceRS","_backFaceRS","_sp","_uniforms","u_type","u_xHalfAngle","u_yHalfAngle","u_radius","u_showThroughEllipsoid","u_showIntersection","u_intersectionColor","u_intersectionWidth","u_normalDirection","u_lineColor","_scanUniforms","u_color","prototype","update","frameState","mode","SCENE3D","createVS","createRS","createSP","radiusChanged","ZERO","modelMatrixChanged","equals","multiplyByUniformScale","transform","translucent","isTranslucent","time","timeDiff","secondsDifference","percentage","max","angle","cosYHalfAngle","tanXHalfAngle","maxX","fromRotationX","matrix3Scratch","tanYHalfAngle","cosXHalfAngle","maxY","fromRotationY","multiplyByMatrix3","createVertexArray","createRenderState","createShaderProgram","createCommands","commandList","passes","colorCommands","render","colorCommand","push","nScratch","computeUnitPosiiton","primitive","zoy","phi","zox","computeSectorPositions","unitPosition","positions","matrix3","map","p","multiplyByVector","reverse","createSectorVertexArray","context","planeLength","Array","concat","apply","vertices","Float32Array","k","planePositions","n","normalize","cross","j","x","y","z","vertexBuffer","createVertexBuffer","typedArray","usage","STATIC_DRAW","stride","BYTES_PER_ELEMENT","attributes","index","componentsPerAttribute","componentDatatype","FLOAT","offsetInBytes","strideInBytes","createSectorLineVertexArray","createSectorSegmentLineVertexArray","createDomeVertexArray","geometry","createGeometry","vertexFormat","POSITION_ONLY","stackPartitions","slicePartitions","vertexArray","fromGeometry","bufferUsage","interleave","createDomeLineVertexArray","EllipsoidOutlineGeometry","createScanPlaneVertexArray","unitSectorPositions","unitScanPlanePositions","PI_OVER_TWO","_scanPlaneVA","createCommonShaderProgram","vs","fs","sources","shaderSource","replaceCache","shaderProgram","vertexShaderSource","fragmentShaderSource","pickFS","pickColorQualifier","_pickSP","createScanPlaneShaderProgram","_scanePlaneSP","fromCache","depthTest","enabled","depthMask","blending","ALPHA_BLEND","cull","face","BACK","FRONT","_pickRS","createCommand","frontCommand","backCommand","frontFaceRS","backFaceRS","sp","va","uniforms","pass","isLine","renderState","uniformMap","TRANSLUCENT","OPAQUE","Check","Geometry","GeometryAttribute","GeometryAttributes","GeometryPipeline","IndexDatatype","Ellipsoid","ConicArcSensorGeometry","round","typeOf","number","DEFAULT","_angle","_stackPartitions","_slicePartitions","_vertexFormat","fromDimensions","greaterThanOrEquals","height","conicSensorGeometry","console","bottomIndex","numIndices","vertexCount","indices","createTypedArray","Float64Array","positionIndex","cosTheta","sinTheta","theta","TWO_PI","sinPhi","xSinPhi","ySinPhi","zCosPhi","DOUBLE","values","indicesIndex","topOffset","bottomOffset","boundingSphere","computeNormal","timeEnd","defaultRadii","ConicArcSensorOutlineGeometry","subdivisions","_subdivisions","indicesSize","positionSize","cosPhi","topRowOffset","sliceOffset","Event","createMaterialPropertyDescriptor","createPropertyDescriptor","ConicArcSensorGraphics","_angleSubscription","_radiusSubscription","_stack","_stackSubscription","_slice","_sliceSubscription","_color","_colorSubscription","_show","_showSubscription","_fill","_fillSubscription","_materialSubscription","_outline","_outlineSubscription","_outlineColor","_outlineColorSubscription","_outlineWidth","_outlineWidthSubscription","_shadows","_shadowsSubscription","_distanceDisplayCondition","_distanceDisplayConditionSubscription","_definitionChanged","_gaze","_gazeSubscription","merge","definitionChanged","get","fill","shadows","distanceDisplayCondition","stack","color","outline","outlineColor","outlineWidth","gaze","source","getLinkedPointList","RectangularSensorGraphics","RectangularSensorVisualizer","ConicArcSensorCollection","DataSourceDisplay","originalDefaultVisualizersCallback","defaultVisualizersCallback","scene","entityCluster","dataSource","entities","array","_lineColor","_showSectorLines","_showSectorSegmentLines","_showLateralSurfaces","_showDomeSurfaces","_showDomeLines","_showIntersection","_intersectionColor","_intersectionWidth","_showScanPlane","_scanPlaneColor","_scanPlaneMode","_scanPlaneRate","AssociativeArray","Quaternion","MaterialProperty","Property","matrix4Scratch","cachedPosition","cachedGazePosition","cachedOrientation","diffVectorScratch","orientationScratch","entityCollection","collectionChanged","addEventListener","_onCollectionChanged","_scene","_primitives","primitives","_entityCollection","_hash","_entitiesToVisualize","hash","entity","rectangularSensorGraphics","_rectangularSensor","orientation","data","id","isShowing","isAvailable","getValueOrDefault","getValueOrUndefined","_position","_orientation","add","targetPosition","diffVector","subtract","rotate","angleBetween","UNIT_Z","fromAxisAngle","PI","distance","fromRotationTranslation","fromQuaternion","Transforms","eastNorthUpToFixedFrame","getValue","isDestroyed","destroy","added","removed","changed","set","remove","removePrimitive","Viewer","ColorGeometryInstanceAttribute","Primitive","PerInstanceColorAppearance","DistanceDisplayCondition","DistanceDisplayConditionGeometryInstanceAttribute","viewer","_viewer","clock","_clock","_primitive","_outlinePrimitive","_conicArcSensorCollection","onTick","positionScratch","targetPositionScratch","conicArcSensor","indexOf","splice","removeAll","currentTime","conicArcSensorCollection","outlinePrimitive","instances","outlineInstances","removeAndDestroy","_conicArcSensor","multiplyByScalar","_geometry","conic","POSITION_AND_NORMAL","instance","GeometryInstance","fromColor","outlineGeometry","_outlineGeometry","conicOutline","asynchronous","geometryInstances","appearance","flat","closed","lineWidth","clampLineWidth","Entity","ConstantPositionProperty","createConstantPositionProperty","value","createPositionPropertyDescriptor","name","ConicArcSensor","Object","gazeAt","PolylineTrailType","PolylineTrailImage","_materialCache","addMaterial","fabric","type","image","PolylineAttackLinkType","PolylineAttackLinkImage","PolylineArrowLinkType","PolylineArrowLinkImage","PolylinePulseLinkType","PolylinePulseLinkImage","PolylineGrowLinkType","glowPower","PolylineTrailLinkType","PolylineTrailLinkImage","EllipsoidFadeType","PolylineTrailMaterialProperty","PolylineAttackLinkMaterialProperty","PolylineArrowLinkMaterialProperty","PolylineGlowLinkMaterialProperty","PolylinePulseLinkMaterialProperty","PolylineTrailLinkMaterialProperty","ElliposidFadeMaterialProperty","defaultColor","duration","isConstant","getType","getValueOrClonedDefault","secondsOfDay","other","startPoint","endPoint","angularityFactor","numOfSingleLine","startPosition","Cartographic","fromCartesian","endPosition","startLon","longitude","startLat","latitude","endLon","endLat","dist","sqrt","angularity","startVec","endVec","startLength","endLength","omega","t","invT","startScalar","endScalar","startScalarVec","endScalarVec","centerVec","ht","centerLength"],"mappings":"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","file":"CesiumGeometry.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Cesium\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Cesium\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CesiumGeometry\"] = factory(require(\"Cesium\"));\n\telse\n\t\troot[\"CesiumGeometry\"] = factory(root[\"Cesium\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b62b72d73a8a3d90f005","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Cesium\"\n// module id = 0\n// module chunks = 0","var util = {};\r\n\r\n/**\r\n * 获取插件的基本路径\r\n */\r\n(function () {\r\n    var cesiumScriptRegex = /((?:.*\\/)|^)cesiumGeometry[\\w-]*\\.js(?:\\W|$)/i;\r\n\r\n    function getBaseUrlFromCesiumScript() {\r\n        var scripts = document.getElementsByTagName('script');\r\n        for (var i = 0, len = scripts.length; i < len; ++i) {\r\n            var src = scripts[i].getAttribute('src');\r\n            var result = cesiumScriptRegex.exec(src);\r\n            if (result !== null) {\r\n                return result[1];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    var baseUrl = undefined;\r\n    util.getBaseUrl = function () {\r\n        if (baseUrl === undefined) {\r\n            baseUrl = getBaseUrlFromCesiumScript();\r\n        }\r\n        return baseUrl;\r\n    };\r\n})();\r\n\r\nexport {util};\n\n\n// WEBPACK FOOTER //\n// ./Source/Core/util.js","import Cesium from \"Cesium\";\r\nimport RectangularSensorVS from \"./shaders/RectangularSensorVS.glsl\";\r\nimport RectangularSensorFS from \"./shaders/RectangularSensorFS.glsl\";\r\nimport RectangularSensor from \"./shaders/RectangularSensor.glsl\";\r\nimport RectangularSensorScanPlaneFS from \"./shaders/RectangularSensorScanPlaneFS.glsl\";\r\n\r\nvar BoundingSphere = Cesium.BoundingSphere;\r\nvar Cartesian3 = Cesium.Cartesian3;\r\nvar Color = Cesium.Color;\r\nvar combine = Cesium.combine;\r\nvar ComponentDatatype = Cesium.ComponentDatatype;\r\nvar defaultValue = Cesium.defaultValue;\r\nvar defined = Cesium.defined;\r\nvar defineProperties = Cesium.defineProperties;\r\nvar destroyObject = Cesium.destroyObject;\r\nvar DeveloperError = Cesium.DeveloperError;\r\nvar Matrix4 = Cesium.Matrix4;\r\nvar PrimitiveType = Cesium.PrimitiveType;\r\nvar Buffer = Cesium.Buffer;\r\nvar BufferUsage = Cesium.BufferUsage;\r\nvar DrawCommand = Cesium.DrawCommand;\r\nvar Pass = Cesium.Pass;\r\nvar RenderState = Cesium.RenderState;\r\nvar ShaderProgram = Cesium.ShaderProgram;\r\nvar ShaderSource = Cesium.ShaderSource;\r\nvar VertexArray = Cesium.VertexArray;\r\nvar BlendingState = Cesium.BlendingState;\r\nvar CullFace = Cesium.CullFace;\r\nvar Material = Cesium.Material;\r\nvar SceneMode = Cesium.SceneMode;\r\nvar VertexFormat = Cesium.VertexFormat;\r\nvar CesiumMath = Cesium.Math;\r\nvar Matrix3 = Cesium.Matrix3;\r\nvar Matrix4 = Cesium.Matrix4;\r\nvar JulianDate = Cesium.JulianDate;\r\n\r\nvar BoxGeometry = Cesium.BoxGeometry;\r\nvar EllipsoidGeometry = Cesium.EllipsoidGeometry;\r\n\r\nvar sin = Math.sin;\r\nvar cos = Math.cos;\r\nvar tan = Math.tan;\r\nvar atan = Math.atan;\r\nvar asin = Math.asin;\r\n\r\nvar attributeLocations = {\r\n    position: 0,\r\n    normal: 1\r\n};\r\n\r\nfunction RectangularSensorPrimitive(options) {\r\n    var self = this;\r\n\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    /**\r\n     * 是否显示\r\n     */\r\n    this.show = defaultValue(options.show, true);\r\n\r\n    /**\r\n     * 切分程度\r\n     */\r\n    this.slice = defaultValue(options.slice, 32);\r\n\r\n    /**\r\n     * 传感器的模型矩阵\r\n     */\r\n    this.modelMatrix = Matrix4.clone(options.modelMatrix, new Matrix4());\r\n    this._modelMatrix = new Matrix4();\r\n    this._computedModelMatrix = new Matrix4();\r\n    this._computedScanPlaneModelMatrix = new Matrix4();\r\n\r\n    /**\r\n     * 传感器的半径\r\n     */\r\n    this.radius = defaultValue(options.radius, Number.POSITIVE_INFINITY);\r\n    this._radius = undefined;\r\n\r\n    /**\r\n     * 传感器水平半角\r\n     */\r\n    this.xHalfAngle = defaultValue(options.xHalfAngle, 0);\r\n    this._xHalfAngle = undefined;\r\n\r\n    /**\r\n     * 传感器垂直半角\r\n     */\r\n    this.yHalfAngle = defaultValue(options.yHalfAngle, 0);\r\n    this._yHalfAngle = undefined;\r\n\r\n    /**\r\n     * 线的颜色\r\n     */\r\n    this.lineColor = defaultValue(options.lineColor, Color.WHITE);\r\n\r\n    /**\r\n     * 是否显示扇面的线\r\n     */\r\n    this.showSectorLines = defaultValue(options.showSectorLines, true);\r\n\r\n    /**\r\n     * 是否显示扇面和圆顶面连接的线\r\n     */\r\n    this.showSectorSegmentLines = defaultValue(options.showSectorSegmentLines, true);\r\n\r\n\r\n    /**\r\n     * 是否显示侧面\r\n     */\r\n    this.showLateralSurfaces = defaultValue(options.showLateralSurfaces, true);\r\n\r\n    /**\r\n     * 目前用的统一材质\r\n     * @type {Material}\r\n     */\r\n    this.material = defined(options.material) ? options.material : Material.fromType(Material.ColorType);\r\n    this._material = undefined;\r\n    this._translucent = undefined;\r\n\r\n    /**\r\n     * 侧面材质\r\n     * @type {Material}\r\n     */\r\n    this.lateralSurfaceMaterial = defined(options.lateralSurfaceMaterial) ? options.lateralSurfaceMaterial : Material.fromType(Material.ColorType);\r\n    this._lateralSurfaceMaterial = undefined;\r\n    this._lateralSurfaceTranslucent = undefined;\r\n\r\n    /**\r\n     * 是否显示圆顶表面\r\n     */\r\n    this.showDomeSurfaces = defaultValue(options.showDomeSurfaces, true);\r\n\r\n    /**\r\n     * 圆顶表面材质\r\n     * @type {Material}\r\n     */\r\n    this.domeSurfaceMaterial = defined(options.domeSurfaceMaterial) ? options.domeSurfaceMaterial : Material.fromType(Material.ColorType);\r\n    this._domeSurfaceMaterial = undefined;\r\n\r\n    /**\r\n     * 是否显示圆顶面线\r\n     */\r\n    this.showDomeLines = defaultValue(options.showDomeLines, true);\r\n\r\n    /**\r\n     * 是否显示与地球相交的线\r\n     */\r\n    this.showIntersection = defaultValue(options.showIntersection, true);\r\n\r\n    /**\r\n     * 与地球相交的线的颜色\r\n     */\r\n    this.intersectionColor = defaultValue(options.intersectionColor, Color.WHITE);\r\n\r\n    /**\r\n     * 与地球相交的线的宽度（像素）\r\n     */\r\n    this.intersectionWidth = defaultValue(options.intersectionWidth, 5.0);\r\n\r\n    /**\r\n     * 是否穿过地球\r\n     */\r\n    this.showThroughEllipsoid = defaultValue(options.showThroughEllipsoid, false);\r\n    this._showThroughEllipsoid = undefined;\r\n\r\n    /**\r\n     * 是否显示扫描面\r\n     */\r\n    this.showScanPlane = defaultValue(options.showScanPlane, true);\r\n\r\n    /**\r\n     * 扫描面颜色\r\n     */\r\n    this.scanPlaneColor = defaultValue(options.scanPlaneColor, Color.WHITE);\r\n\r\n    /**\r\n     * 扫描面模式 垂直vertical/水平horizontal\r\n     */\r\n    this.scanPlaneMode = defaultValue(options.scanPlaneMode, 'horizontal');\r\n\r\n    /**\r\n     * 扫描速率\r\n     */\r\n    this.scanPlaneRate = defaultValue(options.scanPlaneRate, 10);\r\n\r\n    this._scanePlaneXHalfAngle = 0;\r\n    this._scanePlaneYHalfAngle = 0;\r\n\r\n    //时间计算的起点\r\n    this._time = JulianDate.now();\r\n\r\n\r\n    this._boundingSphere = new BoundingSphere();\r\n    this._boundingSphereWC = new BoundingSphere();\r\n\r\n    //扇面 sector\r\n    this._sectorFrontCommand = new DrawCommand({\r\n        owner: this,\r\n        primitiveType: PrimitiveType.TRIANGLES,\r\n        boundingVolume: this._boundingSphereWC\r\n    });\r\n    this._sectorBackCommand = new DrawCommand({\r\n        owner: this,\r\n        primitiveType: PrimitiveType.TRIANGLES,\r\n        boundingVolume: this._boundingSphereWC\r\n    });\r\n    this._sectorVA = undefined;\r\n\r\n    //扇面边线 sectorLine\r\n    this._sectorLineCommand = new DrawCommand({\r\n        owner: this,\r\n        primitiveType: PrimitiveType.LINES,\r\n        boundingVolume: this._boundingSphereWC\r\n    });\r\n    this._sectorLineVA = undefined;\r\n\r\n    //扇面分割线 sectorSegmentLine\r\n    this._sectorSegmentLineCommand = new DrawCommand({\r\n        owner: this,\r\n        primitiveType: PrimitiveType.LINES,\r\n        boundingVolume: this._boundingSphereWC\r\n    });\r\n    this._sectorSegmentLineVA = undefined;\r\n\r\n    //弧面 dome\r\n    this._domeFrontCommand = new DrawCommand({\r\n        owner: this,\r\n        primitiveType: PrimitiveType.TRIANGLES,\r\n        boundingVolume: this._boundingSphereWC\r\n    });\r\n    this._domeBackCommand = new DrawCommand({\r\n        owner: this,\r\n        primitiveType: PrimitiveType.TRIANGLES,\r\n        boundingVolume: this._boundingSphereWC\r\n    });\r\n    this._domeVA = undefined;\r\n\r\n    //弧面线 domeLine\r\n    this._domeLineCommand = new DrawCommand({\r\n        owner: this,\r\n        primitiveType: PrimitiveType.LINES,\r\n        boundingVolume: this._boundingSphereWC\r\n    });\r\n    this._domeLineVA = undefined;\r\n\r\n    //扫描面 scanPlane/scanRadial\r\n    this._scanPlaneFrontCommand = new DrawCommand({\r\n        owner: this,\r\n        primitiveType: PrimitiveType.TRIANGLES,\r\n        boundingVolume: this._boundingSphereWC\r\n    });\r\n    this._scanPlaneBackCommand = new DrawCommand({\r\n        owner: this,\r\n        primitiveType: PrimitiveType.TRIANGLES,\r\n        boundingVolume: this._boundingSphereWC\r\n    });\r\n\r\n    this._scanRadialCommand = undefined;\r\n\r\n    this._colorCommands = [];\r\n\r\n    this._frontFaceRS = undefined;\r\n    this._backFaceRS = undefined;\r\n    this._sp = undefined;\r\n\r\n\r\n    this._uniforms = {\r\n        u_type: function () {\r\n            return 0;//面\r\n        },\r\n        u_xHalfAngle: function () {\r\n            return self.xHalfAngle;\r\n        },\r\n        u_yHalfAngle: function () {\r\n            return self.yHalfAngle;\r\n        },\r\n        u_radius: function () {\r\n            return self.radius;\r\n        },\r\n        u_showThroughEllipsoid: function () {\r\n            return self.showThroughEllipsoid;\r\n        },\r\n        u_showIntersection: function () {\r\n            return self.showIntersection;\r\n        },\r\n        u_intersectionColor: function () {\r\n            return self.intersectionColor;\r\n        },\r\n        u_intersectionWidth: function () {\r\n            return self.intersectionWidth;\r\n        },\r\n        u_normalDirection: function () {\r\n            return 1.0;\r\n        },\r\n        u_lineColor: function () {\r\n            return self.lineColor;\r\n        }\r\n    };\r\n\r\n    this._scanUniforms = {\r\n        u_xHalfAngle: function () {\r\n            return self._scanePlaneXHalfAngle;\r\n        },\r\n        u_yHalfAngle: function () {\r\n            return self._scanePlaneYHalfAngle;\r\n        },\r\n        u_radius: function () {\r\n            return self.radius;\r\n        },\r\n        u_color: function () {\r\n            return self.scanPlaneColor;\r\n        },\r\n        u_showThroughEllipsoid: function () {\r\n            return self.showThroughEllipsoid;\r\n        },\r\n        u_showIntersection: function () {\r\n            return self.showIntersection;\r\n        },\r\n        u_intersectionColor: function () {\r\n            return self.intersectionColor;\r\n        },\r\n        u_intersectionWidth: function () {\r\n            return self.intersectionWidth;\r\n        },\r\n        u_normalDirection: function () {\r\n            return 1.0;\r\n        },\r\n        u_lineColor: function () {\r\n            return self.lineColor;\r\n        }\r\n    };\r\n}\r\n\r\nRectangularSensorPrimitive.prototype.update = function (frameState) {\r\n    var mode = frameState.mode;\r\n    if (!this.show || mode !== SceneMode.SCENE3D) {\r\n        return;\r\n    }\r\n    var createVS = false;\r\n    var createRS = false;\r\n    var createSP = false;\r\n\r\n    var xHalfAngle = this.xHalfAngle;\r\n    var yHalfAngle = this.yHalfAngle;\r\n\r\n    if (xHalfAngle < 0.0 || yHalfAngle < 0.0) {\r\n        throw new DeveloperError('halfAngle must be greater than or equal to zero.');\r\n    }\r\n    if (xHalfAngle == 0.0 || yHalfAngle == 0.0) {\r\n        return;\r\n    }\r\n    if (this._xHalfAngle !== xHalfAngle || this._yHalfAngle !== yHalfAngle) {\r\n        this._xHalfAngle = xHalfAngle;\r\n        this._yHalfAngle = yHalfAngle;\r\n        createVS = true;\r\n    }\r\n\r\n    var radius = this.radius;\r\n    if (radius < 0.0) {\r\n        throw new DeveloperError('this.radius must be greater than or equal to zero.');\r\n    }\r\n    var radiusChanged = false;\r\n    if (this._radius !== radius) {\r\n        radiusChanged = true;\r\n        this._radius = radius;\r\n        this._boundingSphere = new BoundingSphere(Cartesian3.ZERO, this.radius);\r\n    }\r\n\r\n    var modelMatrixChanged = !Matrix4.equals(this.modelMatrix, this._modelMatrix);\r\n    if (modelMatrixChanged || radiusChanged) {\r\n        Matrix4.clone(this.modelMatrix, this._modelMatrix);\r\n        Matrix4.multiplyByUniformScale(this.modelMatrix, this.radius, this._computedModelMatrix);\r\n        BoundingSphere.transform(this._boundingSphere, this.modelMatrix, this._boundingSphereWC);\r\n    }\r\n\r\n    var showThroughEllipsoid = this.showThroughEllipsoid;\r\n    if (this._showThroughEllipsoid !== this.showThroughEllipsoid) {\r\n        this._showThroughEllipsoid = showThroughEllipsoid;\r\n        createRS = true;\r\n    }\r\n\r\n    var material = this.material;\r\n    if (this._material !== material) {\r\n        this._material = material;\r\n        createRS = true;\r\n        createSP = true;\r\n    }\r\n    var translucent = material.isTranslucent();\r\n    if (this._translucent !== translucent) {\r\n        this._translucent = translucent;\r\n        createRS = true;\r\n    }\r\n\r\n    if (this.showScanPlane) {\r\n        var time = frameState.time;\r\n        var timeDiff = JulianDate.secondsDifference(time, this._time);\r\n        if (timeDiff < 0) {\r\n            this._time = JulianDate.clone(time, this._time);\r\n        }\r\n        var percentage = Math.max((timeDiff % this.scanPlaneRate) / this.scanPlaneRate, 0);\r\n        var angle;\r\n\r\n        if (this.scanPlaneMode == 'horizontal') {\r\n            angle = 2 * yHalfAngle * percentage - yHalfAngle;\r\n            var cosYHalfAngle = cos(angle);\r\n            var tanXHalfAngle = tan(xHalfAngle);\r\n\r\n            var maxX = atan(cosYHalfAngle * tanXHalfAngle);\r\n            this._scanePlaneXHalfAngle = maxX;\r\n            this._scanePlaneYHalfAngle = angle;\r\n            Cesium.Matrix3.fromRotationX(this._scanePlaneYHalfAngle, matrix3Scratch);\r\n        } else {\r\n            angle = 2 * xHalfAngle * percentage - xHalfAngle;\r\n            var tanYHalfAngle = tan(yHalfAngle);\r\n            var cosXHalfAngle = cos(angle);\r\n\r\n            var maxY = atan(cosXHalfAngle * tanYHalfAngle);\r\n            this._scanePlaneXHalfAngle = angle;\r\n            this._scanePlaneYHalfAngle = maxY;\r\n            Cesium.Matrix3.fromRotationY(this._scanePlaneXHalfAngle, matrix3Scratch);\r\n        }\r\n\r\n        Cesium.Matrix4.multiplyByMatrix3(this.modelMatrix, matrix3Scratch, this._computedScanPlaneModelMatrix);\r\n        Matrix4.multiplyByUniformScale(this._computedScanPlaneModelMatrix, this.radius, this._computedScanPlaneModelMatrix);\r\n    }\r\n\r\n\r\n    if (createVS) {\r\n        createVertexArray(this, frameState);\r\n    }\r\n    if (createRS) {\r\n        createRenderState(this, showThroughEllipsoid, translucent);\r\n    }\r\n    if (createSP) {\r\n        createShaderProgram(this, frameState, material);\r\n    }\r\n    if (createRS || createSP) {\r\n        createCommands(this, translucent);\r\n    }\r\n\r\n    var commandList = frameState.commandList;\r\n    var passes = frameState.passes;\r\n    var colorCommands = this._colorCommands;\r\n    if (passes.render) {\r\n        for (var i = 0, len = colorCommands.length; i < len; i++) {\r\n            var colorCommand = colorCommands[i];\r\n            commandList.push(colorCommand);\r\n        }\r\n    }\r\n};\r\n\r\nvar matrix3Scratch = new Matrix3();\r\nvar nScratch = new Cartesian3();\r\n\r\n//region -- VertexArray --\r\n\r\n/**\r\n * 计算zoy面和zoy面单位扇形位置\r\n * @param primitive\r\n * @returns {{zoy: Array, zox: Array}}\r\n */\r\nfunction computeUnitPosiiton(primitive, xHalfAngle, yHalfAngle) {\r\n    var slice = primitive.slice;\r\n\r\n    //以中心为角度\r\n    var cosYHalfAngle = cos(yHalfAngle);\r\n    var tanYHalfAngle = tan(yHalfAngle);\r\n    var cosXHalfAngle = cos(xHalfAngle);\r\n    var tanXHalfAngle = tan(xHalfAngle);\r\n\r\n    var maxY = atan(cosXHalfAngle * tanYHalfAngle);\r\n    var maxX = atan(cosYHalfAngle * tanXHalfAngle);\r\n\r\n    //ZOY面单位圆\r\n    var zoy = [];\r\n    for (var i = 0; i < slice; i++) {\r\n        var phi = 2 * maxY * i / (slice - 1) - maxY;\r\n        zoy.push(new Cartesian3(0, sin(phi), cos(phi)));\r\n    }\r\n    //zox面单位圆\r\n    var zox = [];\r\n    for (var i = 0; i < slice; i++) {\r\n        var phi = 2 * maxX * i / (slice - 1) - maxX;\r\n        zox.push(new Cartesian3(sin(phi), 0, cos(phi)));\r\n    }\r\n\r\n    return {\r\n        zoy: zoy,\r\n        zox: zox\r\n    }\r\n}\r\n\r\n/**\r\n * 计算扇面的位置\r\n * @param unitPosition\r\n * @returns {Array}\r\n */\r\nfunction computeSectorPositions(primitive, unitPosition) {\r\n    var xHalfAngle = primitive.xHalfAngle,\r\n        yHalfAngle = primitive.yHalfAngle,\r\n        zoy = unitPosition.zoy,\r\n        zox = unitPosition.zox;\r\n    var positions = [];\r\n\r\n    //zoy面沿y轴逆时针转xHalfAngle\r\n    var matrix3 = Matrix3.fromRotationY(xHalfAngle, matrix3Scratch)\r\n    positions.push(zoy.map(function (p) {\r\n        return Matrix3.multiplyByVector(matrix3, p, new Cesium.Cartesian3());\r\n    }));\r\n    //zox面沿x轴顺时针转yHalfAngle\r\n    var matrix3 = Matrix3.fromRotationX(-yHalfAngle, matrix3Scratch);\r\n    positions.push(zox.map(function (p) {\r\n        return Matrix3.multiplyByVector(matrix3, p, new Cesium.Cartesian3());\r\n    }).reverse());\r\n    //zoy面沿y轴顺时针转xHalfAngle\r\n    var matrix3 = Matrix3.fromRotationY(-xHalfAngle, matrix3Scratch);\r\n    positions.push(zoy.map(function (p) {\r\n        return Matrix3.multiplyByVector(matrix3, p, new Cesium.Cartesian3());\r\n    }).reverse());\r\n    //zox面沿x轴逆时针转yHalfAngle\r\n    var matrix3 = Matrix3.fromRotationX(yHalfAngle, matrix3Scratch);\r\n    positions.push(zox.map(function (p) {\r\n        return Matrix3.multiplyByVector(matrix3, p, new Cesium.Cartesian3());\r\n    }));\r\n    return positions;\r\n}\r\n\r\n/**\r\n * 创建扇面顶点\r\n * @param context\r\n * @param positions\r\n * @returns {*}\r\n */\r\nfunction createSectorVertexArray(context, positions) {\r\n    var planeLength = Array.prototype.concat.apply([], positions).length - positions.length;\r\n    var vertices = new Float32Array(2 * 3 * 3 * planeLength);\r\n\r\n    var k = 0;\r\n    for (var i = 0, len = positions.length; i < len; i++) {\r\n        var planePositions = positions[i];\r\n        var n = Cartesian3.normalize(Cartesian3.cross(planePositions[0], planePositions[planePositions.length - 1], nScratch), nScratch);\r\n        for (var j = 0, planeLength = planePositions.length - 1; j < planeLength; j++) {\r\n            vertices[k++] = 0.0;\r\n            vertices[k++] = 0.0;\r\n            vertices[k++] = 0.0;\r\n            vertices[k++] = -n.x;\r\n            vertices[k++] = -n.y;\r\n            vertices[k++] = -n.z;\r\n\r\n            vertices[k++] = planePositions[j].x;\r\n            vertices[k++] = planePositions[j].y;\r\n            vertices[k++] = planePositions[j].z;\r\n            vertices[k++] = -n.x;\r\n            vertices[k++] = -n.y;\r\n            vertices[k++] = -n.z;\r\n\r\n            vertices[k++] = planePositions[j + 1].x;\r\n            vertices[k++] = planePositions[j + 1].y;\r\n            vertices[k++] = planePositions[j + 1].z;\r\n            vertices[k++] = -n.x;\r\n            vertices[k++] = -n.y;\r\n            vertices[k++] = -n.z;\r\n        }\r\n    }\r\n\r\n    var vertexBuffer = Buffer.createVertexBuffer({\r\n        context: context,\r\n        typedArray: vertices,\r\n        usage: BufferUsage.STATIC_DRAW\r\n    });\r\n\r\n    var stride = 2 * 3 * Float32Array.BYTES_PER_ELEMENT;\r\n\r\n    var attributes = [{\r\n        index: attributeLocations.position,\r\n        vertexBuffer: vertexBuffer,\r\n        componentsPerAttribute: 3,\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        offsetInBytes: 0,\r\n        strideInBytes: stride\r\n    }, {\r\n        index: attributeLocations.normal,\r\n        vertexBuffer: vertexBuffer,\r\n        componentsPerAttribute: 3,\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        offsetInBytes: 3 * Float32Array.BYTES_PER_ELEMENT,\r\n        strideInBytes: stride\r\n    }];\r\n\r\n    return new VertexArray({\r\n        context: context,\r\n        attributes: attributes\r\n    });\r\n}\r\n\r\n/**\r\n * 创建扇面边线顶点\r\n * @param context\r\n * @param positions\r\n * @returns {*}\r\n */\r\nfunction createSectorLineVertexArray(context, positions) {\r\n    var planeLength = positions.length;\r\n    var vertices = new Float32Array(3 * 3 * planeLength);\r\n\r\n    var k = 0;\r\n    for (var i = 0, len = positions.length; i < len; i++) {\r\n        var planePositions = positions[i];\r\n        vertices[k++] = 0.0;\r\n        vertices[k++] = 0.0;\r\n        vertices[k++] = 0.0;\r\n\r\n        vertices[k++] = planePositions[0].x;\r\n        vertices[k++] = planePositions[0].y;\r\n        vertices[k++] = planePositions[0].z;\r\n    }\r\n\r\n    var vertexBuffer = Buffer.createVertexBuffer({\r\n        context: context,\r\n        typedArray: vertices,\r\n        usage: BufferUsage.STATIC_DRAW\r\n    });\r\n\r\n    var stride = 3 * Float32Array.BYTES_PER_ELEMENT;\r\n\r\n    var attributes = [{\r\n        index: attributeLocations.position,\r\n        vertexBuffer: vertexBuffer,\r\n        componentsPerAttribute: 3,\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        offsetInBytes: 0,\r\n        strideInBytes: stride\r\n    }];\r\n\r\n    return new VertexArray({\r\n        context: context,\r\n        attributes: attributes\r\n    });\r\n}\r\n\r\n/**\r\n * 创建扇面圆顶面连接线顶点\r\n * @param context\r\n * @param positions\r\n * @returns {*}\r\n */\r\nfunction createSectorSegmentLineVertexArray(context, positions) {\r\n    var planeLength = Array.prototype.concat.apply([], positions).length - positions.length;\r\n    var vertices = new Float32Array(3 * 3 * planeLength);\r\n\r\n    var k = 0;\r\n    for (var i = 0, len = positions.length; i < len; i++) {\r\n        var planePositions = positions[i];\r\n\r\n        for (var j = 0, planeLength = planePositions.length - 1; j < planeLength; j++) {\r\n            vertices[k++] = planePositions[j].x;\r\n            vertices[k++] = planePositions[j].y;\r\n            vertices[k++] = planePositions[j].z;\r\n\r\n            vertices[k++] = planePositions[j + 1].x;\r\n            vertices[k++] = planePositions[j + 1].y;\r\n            vertices[k++] = planePositions[j + 1].z;\r\n        }\r\n    }\r\n\r\n    var vertexBuffer = Buffer.createVertexBuffer({\r\n        context: context,\r\n        typedArray: vertices,\r\n        usage: BufferUsage.STATIC_DRAW\r\n    });\r\n\r\n    var stride = 3 * Float32Array.BYTES_PER_ELEMENT;\r\n\r\n    var attributes = [{\r\n        index: attributeLocations.position,\r\n        vertexBuffer: vertexBuffer,\r\n        componentsPerAttribute: 3,\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        offsetInBytes: 0,\r\n        strideInBytes: stride\r\n    }];\r\n\r\n    return new VertexArray({\r\n        context: context,\r\n        attributes: attributes\r\n    });\r\n}\r\n\r\n/**\r\n * 创建圆顶面顶点\r\n * @param context\r\n */\r\nfunction createDomeVertexArray(context) {\r\n    var geometry = Cesium.EllipsoidGeometry.createGeometry(new Cesium.EllipsoidGeometry({\r\n        vertexFormat: VertexFormat.POSITION_ONLY,\r\n        stackPartitions: 32,\r\n        slicePartitions: 32\r\n    }));\r\n\r\n    var vertexArray = VertexArray.fromGeometry({\r\n        context: context,\r\n        geometry: geometry,\r\n        attributeLocations: attributeLocations,\r\n        bufferUsage: BufferUsage.STATIC_DRAW,\r\n        interleave: false\r\n    });\r\n    return vertexArray;\r\n}\r\n\r\n/**\r\n * 创建圆顶面连线顶点\r\n * @param context\r\n */\r\nfunction createDomeLineVertexArray(context) {\r\n    var geometry = Cesium.EllipsoidOutlineGeometry.createGeometry(new Cesium.EllipsoidOutlineGeometry({\r\n        vertexFormat: VertexFormat.POSITION_ONLY,\r\n        stackPartitions: 32,\r\n        slicePartitions: 32\r\n    }));\r\n\r\n    var vertexArray = VertexArray.fromGeometry({\r\n        context: context,\r\n        geometry: geometry,\r\n        attributeLocations: attributeLocations,\r\n        bufferUsage: BufferUsage.STATIC_DRAW,\r\n        interleave: false\r\n    });\r\n    return vertexArray;\r\n}\r\n\r\n/**\r\n * 创建扫描面顶点\r\n * @param context\r\n * @param positions\r\n * @returns {*}\r\n */\r\nfunction createScanPlaneVertexArray(context, positions) {\r\n    var planeLength = positions.length - 1;\r\n    var vertices = new Float32Array(3 * 3 * planeLength);\r\n\r\n    var k = 0;\r\n    for (var i = 0; i < planeLength; i++) {\r\n        vertices[k++] = 0.0;\r\n        vertices[k++] = 0.0;\r\n        vertices[k++] = 0.0;\r\n\r\n        vertices[k++] = positions[i].x;\r\n        vertices[k++] = positions[i].y;\r\n        vertices[k++] = positions[i].z;\r\n\r\n        vertices[k++] = positions[i + 1].x;\r\n        vertices[k++] = positions[i + 1].y;\r\n        vertices[k++] = positions[i + 1].z;\r\n    }\r\n\r\n    var vertexBuffer = Buffer.createVertexBuffer({\r\n        context: context,\r\n        typedArray: vertices,\r\n        usage: BufferUsage.STATIC_DRAW\r\n    });\r\n\r\n    var stride = 3 * Float32Array.BYTES_PER_ELEMENT;\r\n\r\n    var attributes = [{\r\n        index: attributeLocations.position,\r\n        vertexBuffer: vertexBuffer,\r\n        componentsPerAttribute: 3,\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        offsetInBytes: 0,\r\n        strideInBytes: stride\r\n    }];\r\n\r\n    return new VertexArray({\r\n        context: context,\r\n        attributes: attributes\r\n    });\r\n}\r\n\r\nfunction createVertexArray(primitive, frameState) {\r\n    var context = frameState.context;\r\n\r\n    var unitSectorPositions = computeUnitPosiiton(primitive, primitive.xHalfAngle, primitive.yHalfAngle);\r\n    var positions = computeSectorPositions(primitive, unitSectorPositions);\r\n\r\n    //显示扇面\r\n    if (primitive.showLateralSurfaces) {\r\n        primitive._sectorVA = createSectorVertexArray(context, positions);\r\n    }\r\n\r\n    //显示扇面线\r\n    if (primitive.showSectorLines) {\r\n        primitive._sectorLineVA = createSectorLineVertexArray(context, positions);\r\n    }\r\n\r\n    //显示扇面圆顶面的交线\r\n    if (primitive.showSectorSegmentLines) {\r\n        primitive._sectorSegmentLineVA = createSectorSegmentLineVertexArray(context, positions);\r\n    }\r\n\r\n    //显示弧面\r\n    if (primitive.showDomeSurfaces) {\r\n        primitive._domeVA = createDomeVertexArray(context);\r\n    }\r\n\r\n    //显示弧面线\r\n    if (primitive.showDomeLines) {\r\n        primitive._domeLineVA = createDomeLineVertexArray(context);\r\n    }\r\n\r\n    //显示扫描面\r\n    if (primitive.showScanPlane) {\r\n\r\n        if (primitive.scanPlaneMode == 'horizontal') {\r\n            var unitScanPlanePositions = computeUnitPosiiton(primitive, CesiumMath.PI_OVER_TWO, 0);\r\n            primitive._scanPlaneVA = createScanPlaneVertexArray(context, unitScanPlanePositions.zox);\r\n        } else {\r\n            var unitScanPlanePositions = computeUnitPosiiton(primitive, 0, CesiumMath.PI_OVER_TWO);\r\n            primitive._scanPlaneVA = createScanPlaneVertexArray(context, unitScanPlanePositions.zoy);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n//endregion\r\n\r\n//region -- ShaderProgram --\r\n\r\nfunction createCommonShaderProgram(primitive, frameState, material) {\r\n    var context = frameState.context;\r\n\r\n    var vs = RectangularSensorVS;\r\n    var fs = new ShaderSource({\r\n        sources: [RectangularSensor, material.shaderSource, RectangularSensorFS]\r\n    });\r\n\r\n    primitive._sp = ShaderProgram.replaceCache({\r\n        context: context,\r\n        shaderProgram: primitive._sp,\r\n        vertexShaderSource: vs,\r\n        fragmentShaderSource: fs,\r\n        attributeLocations: attributeLocations\r\n    });\r\n\r\n    var pickFS = new ShaderSource({\r\n        sources: [RectangularSensor, material.shaderSource, RectangularSensorFS],\r\n        pickColorQualifier: 'uniform'\r\n    });\r\n\r\n    primitive._pickSP = ShaderProgram.replaceCache({\r\n        context: context,\r\n        shaderProgram: primitive._pickSP,\r\n        vertexShaderSource: vs,\r\n        fragmentShaderSource: pickFS,\r\n        attributeLocations: attributeLocations\r\n    });\r\n}\r\n\r\nfunction createScanPlaneShaderProgram(primitive, frameState, material) {\r\n    var context = frameState.context;\r\n\r\n    var vs = RectangularSensorVS;\r\n    var fs = new ShaderSource({\r\n        sources: [RectangularSensor, material.shaderSource, RectangularSensorScanPlaneFS]\r\n    });\r\n\r\n    primitive._scanePlaneSP = ShaderProgram.replaceCache({\r\n        context: context,\r\n        shaderProgram: primitive._scanePlaneSP,\r\n        vertexShaderSource: vs,\r\n        fragmentShaderSource: fs,\r\n        attributeLocations: attributeLocations\r\n    });\r\n}\r\n\r\nfunction createShaderProgram(primitive, frameState, material) {\r\n    createCommonShaderProgram(primitive, frameState, material);\r\n\r\n    if (primitive.showScanPlane) {\r\n        createScanPlaneShaderProgram(primitive, frameState, material);\r\n    }\r\n}\r\n\r\n//endregion\r\n\r\n//region -- RenderState --\r\n\r\nfunction createRenderState(primitive, showThroughEllipsoid, translucent) {\r\n    if (translucent) {\r\n        primitive._frontFaceRS = RenderState.fromCache({\r\n            depthTest: {\r\n                enabled: !showThroughEllipsoid\r\n            },\r\n            depthMask: false,\r\n            blending: BlendingState.ALPHA_BLEND,\r\n            cull: {\r\n                enabled: true,\r\n                face: CullFace.BACK\r\n            }\r\n        });\r\n\r\n        primitive._backFaceRS = RenderState.fromCache({\r\n            depthTest: {\r\n                enabled: !showThroughEllipsoid\r\n            },\r\n            depthMask: false,\r\n            blending: BlendingState.ALPHA_BLEND,\r\n            cull: {\r\n                enabled: true,\r\n                face: CullFace.FRONT\r\n            }\r\n        });\r\n\r\n        primitive._pickRS = RenderState.fromCache({\r\n            depthTest: {\r\n                enabled: !showThroughEllipsoid\r\n            },\r\n            depthMask: false,\r\n            blending: BlendingState.ALPHA_BLEND\r\n        });\r\n    } else {\r\n        primitive._frontFaceRS = RenderState.fromCache({\r\n            depthTest: {\r\n                enabled: !showThroughEllipsoid\r\n            },\r\n            depthMask: true\r\n        });\r\n\r\n        primitive._pickRS = RenderState.fromCache({\r\n            depthTest: {\r\n                enabled: true\r\n            },\r\n            depthMask: true\r\n        });\r\n    }\r\n}\r\n\r\n//endregion\r\n\r\n//region -- Command --\r\n\r\nfunction createCommand(primitive, frontCommand, backCommand, frontFaceRS, backFaceRS, sp, va, uniforms, modelMatrix, translucent, pass, isLine) {\r\n    if (translucent && backCommand) {\r\n        backCommand.vertexArray = va;\r\n        backCommand.renderState = backFaceRS;\r\n        backCommand.shaderProgram = sp;\r\n        backCommand.uniformMap = combine(uniforms, primitive._material._uniforms);\r\n        backCommand.uniformMap.u_normalDirection = function () {\r\n            return -1.0;\r\n        };\r\n        backCommand.pass = pass;\r\n        backCommand.modelMatrix = modelMatrix;\r\n        primitive._colorCommands.push(backCommand);\r\n    }\r\n\r\n    frontCommand.vertexArray = va;\r\n    frontCommand.renderState = frontFaceRS;\r\n    frontCommand.shaderProgram = sp;\r\n    frontCommand.uniformMap = combine(uniforms, primitive._material._uniforms);\r\n    if (isLine) {\r\n        frontCommand.uniformMap.u_type = function () {\r\n            return 1;\r\n        }\r\n    }\r\n    frontCommand.pass = pass;\r\n    frontCommand.modelMatrix = modelMatrix;\r\n    primitive._colorCommands.push(frontCommand);\r\n}\r\n\r\nfunction createCommands(primitive, translucent) {\r\n    primitive._colorCommands.length = 0;\r\n\r\n    var pass = translucent ? Pass.TRANSLUCENT : Pass.OPAQUE;\r\n\r\n    //显示扇面\r\n    if (primitive.showLateralSurfaces) {\r\n        createCommand(primitive, primitive._sectorFrontCommand, primitive._sectorBackCommand, primitive._frontFaceRS,\r\n            primitive._backFaceRS, primitive._sp, primitive._sectorVA, primitive._uniforms, primitive._computedModelMatrix, translucent, pass);\r\n    }\r\n    //显示扇面线\r\n    if (primitive.showSectorLines) {\r\n        createCommand(primitive, primitive._sectorLineCommand, undefined, primitive._frontFaceRS, primitive._backFaceRS,\r\n            primitive._sp, primitive._sectorLineVA, primitive._uniforms, primitive._computedModelMatrix, translucent, pass, true);\r\n    }\r\n    //显示扇面交接线\r\n    if (primitive.showSectorSegmentLines) {\r\n        createCommand(primitive, primitive._sectorSegmentLineCommand, undefined, primitive._frontFaceRS, primitive._backFaceRS,\r\n            primitive._sp, primitive._sectorSegmentLineVA, primitive._uniforms, primitive._computedModelMatrix, translucent, pass, true);\r\n    }\r\n    //显示弧面\r\n    if (primitive.showDomeSurfaces) {\r\n        createCommand(primitive, primitive._domeFrontCommand, primitive._domeBackCommand, primitive._frontFaceRS,\r\n            primitive._backFaceRS, primitive._sp, primitive._domeVA, primitive._uniforms, primitive._computedModelMatrix, translucent, pass);\r\n    }\r\n    //显示弧面线\r\n    if (primitive.showDomeLines) {\r\n        createCommand(primitive, primitive._domeLineCommand, undefined, primitive._frontFaceRS, primitive._backFaceRS,\r\n            primitive._sp, primitive._domeLineVA, primitive._uniforms, primitive._computedModelMatrix, translucent, pass, true);\r\n    }\r\n    //显示扫描面\r\n    if (primitive.showScanPlane) {\r\n        createCommand(primitive, primitive._scanPlaneFrontCommand, primitive._scanPlaneBackCommand, primitive._frontFaceRS,\r\n            primitive._backFaceRS, primitive._scanePlaneSP, primitive._scanPlaneVA, primitive._scanUniforms, primitive._computedScanPlaneModelMatrix, translucent, pass);\r\n    }\r\n}\r\n\r\n//endregion\r\n\r\nexport {RectangularSensorPrimitive};\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Sensor/RectangularSensor/RectangularSensorPrimitive.js","import Cesium from 'Cesium';\r\n\r\nvar BoundingSphere = Cesium.BoundingSphere,\r\n    Cartesian3 = Cesium.Cartesian3,\r\n    Check = Cesium.Check,\r\n    ComponentDatatype = Cesium.ComponentDatatype,\r\n    defaultValue = Cesium.defaultValue,\r\n    defined = Cesium.defined,\r\n    Geometry = Cesium.Geometry,\r\n    GeometryAttribute = Cesium.GeometryAttribute,\r\n    GeometryAttributes = Cesium.GeometryAttributes,\r\n    PrimitiveType = Cesium.PrimitiveType,\r\n    VertexFormat = Cesium.VertexFormat,\r\n    CesiumMath = Cesium.Math,\r\n    GeometryPipeline = Cesium.GeometryPipeline,\r\n    IndexDatatype = Cesium.IndexDatatype,\r\n    Ellipsoid = Cesium.Ellipsoid;\r\n\r\nvar cos = Math.cos;\r\nvar sin = Math.sin;\r\n\r\nfunction ConicArcSensorGeometry(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    var angle = options.angle;\r\n    var radius = options.radius;\r\n\r\n    var stackPartitions = Math.round(defaultValue(options.stackPartitions, 12));\r\n    var slicePartitions = Math.round(defaultValue(options.slicePartitions, 64));\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.number('angle', angle);\r\n    Check.typeOf.number('radius', radius);\r\n    //>>includeEnd('debug');\r\n\r\n    var vertexFormat = defaultValue(options.vertexFormat, VertexFormat.DEFAULT);\r\n\r\n    this._angle = angle;\r\n    this._radius = radius;\r\n    this._stackPartitions = stackPartitions;\r\n    this._slicePartitions = slicePartitions;\r\n    this._vertexFormat = vertexFormat;\r\n}\r\n\r\nConicArcSensorGeometry.fromDimensions = function (options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n    var angle = options.angle;\r\n    var radius = options.radius;\r\n    var stackPartitions = options.stackPartitions;\r\n    var slicePartitions = options.slicePartitions;\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.number('angle', angle);\r\n    Check.typeOf.number('radius', radius);\r\n    Check.typeOf.number.greaterThanOrEquals('angle', angle, 0);\r\n    Check.typeOf.number.greaterThanOrEquals('height', height, 0);\r\n    //>>includeEnd('debug');\r\n\r\n    return new ConicArcSensorGeometry({\r\n        angle: angle,\r\n        radius: radius,\r\n        stackPartitions: stackPartitions,\r\n        slicePartitions: slicePartitions,\r\n        vertexFormat: options.vertexFormat\r\n    });\r\n};\r\n\r\nConicArcSensorGeometry.createGeometry = function (conicSensorGeometry) {\r\n    console.time('createGeometry');\r\n\r\n    var angle = conicSensorGeometry._angle;\r\n    var radius = conicSensorGeometry._radius;\r\n    var stackPartitions = conicSensorGeometry._stackPartitions + 1;\r\n    var slicePartitions = conicSensorGeometry._slicePartitions + 1;\r\n    var vertexFormat = conicSensorGeometry._vertexFormat;\r\n\r\n    var attributes = new GeometryAttributes();\r\n\r\n    var bottomIndex;\r\n\r\n    var numIndices = 3 * (slicePartitions - 1) + 6 * (slicePartitions - 1) * (stackPartitions - 2) + (slicePartitions - 1) * 1 * 3;\r\n    var vertexCount = stackPartitions * slicePartitions;\r\n    var indices = IndexDatatype.createTypedArray(vertexCount, numIndices);\r\n    var positions = new Float64Array(vertexCount * 3 + (slicePartitions - 1) * 3 * 3);\r\n\r\n    if (vertexFormat.position) {\r\n        var positionIndex = 0;\r\n\r\n        //bottom plat\r\n        var cosTheta = new Array(slicePartitions);\r\n        var sinTheta = new Array(slicePartitions);\r\n\r\n        for (var i = 0; i < slicePartitions; i++) {\r\n            var theta = CesiumMath.TWO_PI * i / (slicePartitions - 1);\r\n            cosTheta[i] = cos(theta);\r\n            sinTheta[i] = sin(theta);\r\n\r\n            positions[positionIndex++] = 0.0;\r\n            positions[positionIndex++] = 0.0;\r\n            positions[positionIndex++] = -radius;\r\n        }\r\n\r\n        for (i = 1; i < stackPartitions; i++) {\r\n            var phi = angle * i / (stackPartitions - 1);\r\n            var sinPhi = sin(phi);\r\n\r\n            var xSinPhi = radius * sinPhi;\r\n            var ySinPhi = radius * sinPhi;\r\n            var zCosPhi = radius * cos(phi);\r\n\r\n            for (var j = 0; j < slicePartitions; j++) {\r\n                positions[positionIndex++] = cosTheta[j] * xSinPhi;\r\n                positions[positionIndex++] = sinTheta[j] * ySinPhi;\r\n                positions[positionIndex++] = -zCosPhi;\r\n            }\r\n        }\r\n\r\n        //side plat\r\n        bottomIndex = positionIndex;\r\n        for (var i = 0; i < slicePartitions - 1; i++) {\r\n            positions[positionIndex++] = 0;\r\n            positions[positionIndex++] = 0;\r\n            positions[positionIndex++] = 0;\r\n\r\n            positions[positionIndex++] = positions[bottomIndex - (slicePartitions - i - 1) * 3];\r\n            positions[positionIndex++] = positions[bottomIndex - (slicePartitions - i - 1) * 3 + 1];\r\n            positions[positionIndex++] = positions[bottomIndex - (slicePartitions - i - 1) * 3 + 2];\r\n\r\n            positions[positionIndex++] = positions[bottomIndex - (slicePartitions - i) * 3];\r\n            positions[positionIndex++] = positions[bottomIndex - (slicePartitions - i) * 3 + 1];\r\n            positions[positionIndex++] = positions[bottomIndex - (slicePartitions - i) * 3 + 2];\r\n        }\r\n\r\n        attributes.position = new GeometryAttribute({\r\n            componentDatatype: ComponentDatatype.DOUBLE,\r\n            componentsPerAttribute: 3,\r\n            values: positions\r\n        });\r\n    }\r\n\r\n    var indicesIndex = 0;\r\n\r\n    //bottom plat\r\n    for (var j = 0; j < slicePartitions - 1; j++) {\r\n        indices[indicesIndex++] = slicePartitions + j;\r\n        indices[indicesIndex++] = slicePartitions + j + 1;\r\n        indices[indicesIndex++] = j + 1;\r\n    }\r\n\r\n    var topOffset;\r\n    var bottomOffset;\r\n    for (var i = 1; i < stackPartitions - 1; i++) {\r\n        topOffset = i * slicePartitions;\r\n        bottomOffset = (i + 1) * slicePartitions;\r\n\r\n        for (j = 0; j < slicePartitions - 1; j++) {\r\n            indices[indicesIndex++] = bottomOffset + j;\r\n            indices[indicesIndex++] = bottomOffset + j + 1;\r\n            indices[indicesIndex++] = topOffset + j + 1;\r\n\r\n            indices[indicesIndex++] = bottomOffset + j;\r\n            indices[indicesIndex++] = topOffset + j + 1;\r\n            indices[indicesIndex++] = topOffset + j;\r\n        }\r\n    }\r\n\r\n    //side plat\r\n    for (var i = 0, len = (slicePartitions - 1) * 3; i < len; i++) {\r\n        indices[indicesIndex++] = i + bottomIndex / 3;\r\n    }\r\n\r\n\r\n    var geometry = new Geometry({\r\n        attributes: attributes,\r\n        indices: indices,\r\n        primitiveType: PrimitiveType.TRIANGLES,\r\n        boundingSphere: new BoundingSphere(Cartesian3.ZERO, radius)\r\n    });\r\n    geometry = GeometryPipeline.computeNormal(geometry);\r\n    console.timeEnd('createGeometry');\r\n    return geometry;\r\n};\r\n\r\nexport {ConicArcSensorGeometry}\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Sensor/ConicArcSensor/ConicArcSensorGeometry.js","import Cesium from 'Cesium';\r\n\r\nvar BoundingSphere = Cesium.BoundingSphere,\r\n    Cartesian3 = Cesium.Cartesian3,\r\n    ComponentDatatype = Cesium.ComponentDatatype,\r\n    defaultValue = Cesium.defaultValue,\r\n    defined = Cesium.defined,\r\n    DeveloperError = Cesium.DeveloperError,\r\n    Ellipsoid = Cesium.Ellipsoid,\r\n    Geometry = Cesium.Geometry,\r\n    GeometryAttribute = Cesium.GeometryAttribute,\r\n    GeometryAttributes = Cesium.GeometryAttributes,\r\n    IndexDatatype = Cesium.IndexDatatype,\r\n    CesiumMath = Cesium.Math,\r\n    PrimitiveType = Cesium.PrimitiveType;\r\n\r\nvar defaultRadii = new Cartesian3(1.0, 1.0, 1.0);\r\nvar cos = Math.cos;\r\nvar sin = Math.sin;\r\n\r\nfunction ConicArcSensorOutlineGeometry(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    var angle = options.angle;\r\n    var radius = options.radius;\r\n\r\n    var stackPartitions = Math.round(defaultValue(options.stackPartitions, 10));\r\n    var slicePartitions = Math.round(defaultValue(options.slicePartitions, 8));\r\n    var subdivisions = Math.round(defaultValue(options.subdivisions, 128));\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (stackPartitions < 1) {\r\n        throw new DeveloperError('options.stackPartitions cannot be less than 1');\r\n    }\r\n    if (slicePartitions < 0) {\r\n        throw new DeveloperError('options.slicePartitions cannot be less than 0');\r\n    }\r\n    if (subdivisions < 0) {\r\n        throw new DeveloperError('options.subdivisions must be greater than or equal to zero.');\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    this._angle = angle;\r\n    this._radius = radius;\r\n    this._stackPartitions = stackPartitions;\r\n    this._slicePartitions = slicePartitions;\r\n    this._subdivisions = subdivisions;\r\n}\r\n\r\nConicArcSensorOutlineGeometry.createGeometry = function (conicSensorGeometry) {\r\n\r\n    var angle = conicSensorGeometry._angle;\r\n    var radius = conicSensorGeometry._radius;\r\n\r\n    if (radius <= 0 || angle <= 0) {\r\n        return;\r\n    }\r\n\r\n    var stackPartitions = conicSensorGeometry._stackPartitions;\r\n    var slicePartitions = conicSensorGeometry._slicePartitions;\r\n    var subdivisions = conicSensorGeometry._subdivisions;\r\n\r\n    var indicesSize = subdivisions * (stackPartitions + slicePartitions - 1);\r\n    var positionSize = indicesSize - slicePartitions + 2;\r\n    var positions = new Float64Array(positionSize * 3);\r\n    var indices = IndexDatatype.createTypedArray(positionSize, indicesSize * 2);\r\n\r\n    var i;\r\n    var j;\r\n    var theta;\r\n    var phi;\r\n    var cosPhi;\r\n    var sinPhi;\r\n    var index = 0;\r\n\r\n    var cosTheta = new Array(subdivisions);\r\n    var sinTheta = new Array(subdivisions);\r\n    for (i = 0; i < subdivisions; i++) {\r\n        theta = CesiumMath.TWO_PI * i / subdivisions;\r\n        cosTheta[i] = cos(theta);\r\n        sinTheta[i] = sin(theta);\r\n    }\r\n\r\n    for (i = 1; i < stackPartitions; i++) {\r\n        phi = angle * i / (stackPartitions - 1);\r\n        cosPhi = cos(phi);\r\n        sinPhi = sin(phi);\r\n\r\n        for (j = 0; j < subdivisions; j++) {\r\n            positions[index++] = radius * cosTheta[j] * sinPhi;\r\n            positions[index++] = radius * sinTheta[j] * sinPhi;\r\n            positions[index++] = -radius * cosPhi;\r\n        }\r\n    }\r\n\r\n    cosTheta.length = slicePartitions;\r\n    sinTheta.length = slicePartitions;\r\n    for (i = 0; i < slicePartitions; i++) {\r\n        theta = CesiumMath.TWO_PI * i / slicePartitions;\r\n        cosTheta[i] = cos(theta);\r\n        sinTheta[i] = sin(theta);\r\n    }\r\n\r\n    positions[index++] = 0;\r\n    positions[index++] = 0;\r\n    positions[index++] = -radius;\r\n\r\n    for (i = 1; i < subdivisions; i++) {\r\n        phi = angle * i / subdivisions;\r\n        cosPhi = cos(phi);\r\n        sinPhi = sin(phi);\r\n\r\n        for (j = 0; j < slicePartitions; j++) {\r\n            positions[index++] = radius * cosTheta[j] * sinPhi;\r\n            positions[index++] = radius * sinTheta[j] * sinPhi;\r\n            positions[index++] = -radius * cosPhi;\r\n        }\r\n    }\r\n\r\n    /*positions[index++] = 0;\r\n     positions[index++] = 0;\r\n     positions[index++] = -radii.z;*/\r\n\r\n    index = 0;\r\n    for (i = 0; i < stackPartitions - 1; ++i) {\r\n        var topRowOffset = (i * subdivisions);\r\n        for (j = 0; j < subdivisions - 1; ++j) {\r\n            indices[index++] = topRowOffset + j;\r\n            indices[index++] = topRowOffset + j + 1;\r\n        }\r\n\r\n        indices[index++] = topRowOffset + subdivisions - 1;\r\n        indices[index++] = topRowOffset;\r\n    }\r\n\r\n    var sliceOffset = subdivisions * (stackPartitions - 1);\r\n    for (j = 1; j < slicePartitions + 1; ++j) {\r\n        indices[index++] = sliceOffset;\r\n        indices[index++] = sliceOffset + j;\r\n    }\r\n\r\n    for (i = 0; i < subdivisions - 2; ++i) {\r\n        var topOffset = (i * slicePartitions) + 1 + sliceOffset;\r\n        var bottomOffset = ((i + 1) * slicePartitions) + 1 + sliceOffset;\r\n\r\n        for (j = 0; j < slicePartitions - 1; ++j) {\r\n            indices[index++] = bottomOffset + j;\r\n            indices[index++] = topOffset + j;\r\n        }\r\n\r\n        indices[index++] = bottomOffset + slicePartitions - 1;\r\n        indices[index++] = topOffset + slicePartitions - 1;\r\n    }\r\n\r\n    /*var lastPosition = positions.length / 3 - 1;\r\n     for (j = lastPosition - 1; j > lastPosition - slicePartitions - 1; --j) {\r\n     indices[index++] = lastPosition;\r\n     indices[index++] = j;\r\n     }*/\r\n\r\n    var attributes = new GeometryAttributes({\r\n        position: new GeometryAttribute({\r\n            componentDatatype: ComponentDatatype.DOUBLE,\r\n            componentsPerAttribute: 3,\r\n            values: positions\r\n        })\r\n    });\r\n\r\n    return new Geometry({\r\n        attributes: attributes,\r\n        indices: indices,\r\n        primitiveType: PrimitiveType.LINES,\r\n        boundingSphere: new BoundingSphere(Cartesian3.ZERO, radius)\r\n    });\r\n};\r\n\r\nexport {ConicArcSensorOutlineGeometry}\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Sensor/ConicArcSensor/ConicArcSensorOutlineGeometry.js","import Cesium from 'Cesium';\r\nvar defaultValue = Cesium.defaultValue,\r\n    defined = Cesium.defined,\r\n    defineProperties = Cesium.defineProperties,\r\n    DeveloperError = Cesium.DeveloperError,\r\n    Event = Cesium.Event,\r\n    createMaterialPropertyDescriptor = Cesium.createMaterialPropertyDescriptor,\r\n    createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\n\r\nfunction ConicArcSensorGraphics(options) {\r\n    this._angle = undefined;\r\n    this._angleSubscription = undefined;\r\n    this._radius = undefined;\r\n    this._radiusSubscription = undefined;\r\n    this._stack = undefined;\r\n    this._stackSubscription = undefined;\r\n    this._slice = undefined;\r\n    this._sliceSubscription = undefined;\r\n    this._color = undefined;\r\n    this._colorSubscription = undefined;\r\n    this._show = undefined;\r\n    this._showSubscription = undefined;\r\n    this._fill = undefined;\r\n    this._fillSubscription = undefined;\r\n    this._color = undefined;\r\n    this._colorSubscription = undefined;\r\n    this._material = undefined;\r\n    this._materialSubscription = undefined;\r\n    this._outline = undefined;\r\n    this._outlineSubscription = undefined;\r\n    this._outlineColor = undefined;\r\n    this._outlineColorSubscription = undefined;\r\n    this._outlineWidth = undefined;\r\n    this._outlineWidthSubscription = undefined;\r\n    this._shadows = undefined;\r\n    this._shadowsSubscription = undefined;\r\n    this._distanceDisplayCondition = undefined;\r\n    this._distanceDisplayConditionSubscription = undefined;\r\n    this._definitionChanged = new Event();\r\n\r\n    this._gaze = undefined;\r\n    this._gazeSubscription = undefined;\r\n\r\n    this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\r\n}\r\n\r\ndefineProperties(ConicArcSensorGraphics.prototype, {\r\n    /**\r\n     * Gets the event that is raised whenever a property or sub-property is changed or modified.\r\n     * @memberof BoxGraphics.prototype\r\n     * @type {Event}\r\n     * @readonly\r\n     */\r\n    definitionChanged: {\r\n        get: function () {\r\n            return this._definitionChanged;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets or sets the boolean Property specifying the visibility of the box.\r\n     * @memberof BoxGraphics.prototype\r\n     * @type {Property}\r\n     * @default true\r\n     */\r\n    show: createPropertyDescriptor('show'),\r\n\r\n   /* angle: createPropertyDescriptor('angle'),\r\n\r\n    radius: createPropertyDescriptor('radius'),\r\n\r\n    stack: createPropertyDescriptor('stack'),\r\n\r\n    slice: createPropertyDescriptor('slice'),\r\n\r\n    color: createPropertyDescriptor('color'),*/\r\n\r\n    /**\r\n     * Gets or sets the material used to fill the box.\r\n     * @memberof BoxGraphics.prototype\r\n     * @type {MaterialProperty}\r\n     * @default Color.WHITE\r\n     */\r\n    material: createMaterialPropertyDescriptor('material'),\r\n\r\n    /**\r\n     * Gets or sets the boolean Property specifying whether the box is filled with the provided material.\r\n     * @memberof BoxGraphics.prototype\r\n     * @type {Property}\r\n     * @default true\r\n     */\r\n    fill: createPropertyDescriptor('fill'),\r\n\r\n    /**\r\n     * Gets or sets the Property specifying whether the box is outlined.\r\n     * @memberof BoxGraphics.prototype\r\n     * @type {Property}\r\n     * @default false\r\n     */\r\n    //outline: createPropertyDescriptor('outline'),\r\n\r\n    /**\r\n     * Gets or sets the Property specifying the {@link Color} of the outline.\r\n     * @memberof BoxGraphics.prototype\r\n     * @type {Property}\r\n     * @default Color.BLACK\r\n     */\r\n    //outlineColor: createPropertyDescriptor('outlineColor'),\r\n\r\n    /**\r\n     * Gets or sets the numeric Property specifying the width of the outline.\r\n     * @memberof BoxGraphics.prototype\r\n     * @type {Property}\r\n     * @default 1.0\r\n     */\r\n    //outlineWidth: createPropertyDescriptor('outlineWidth'),\r\n\r\n    /**\r\n     * Get or sets the enum Property specifying whether the box\r\n     * casts or receives shadows from each light source.\r\n     * @memberof BoxGraphics.prototype\r\n     * @type {Property}\r\n     * @default ShadowMode.DISABLED\r\n     */\r\n    shadows: createPropertyDescriptor('shadows'),\r\n\r\n    /**\r\n     * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this box will be displayed.\r\n     * @memberof BoxGraphics.prototype\r\n     * @type {Property}\r\n     */\r\n    distanceDisplayCondition: createPropertyDescriptor('distanceDisplayCondition'),\r\n});\r\n\r\nConicArcSensorGraphics.prototype.clone = function (result) {\r\n    if (!defined(result)) {\r\n        return new ConicArcSensorGraphics(this);\r\n    }\r\n    result.angle = this.angle;\r\n    result.radius = this.radius;\r\n    result.stack = this.stack;\r\n    result.slice = this.slice;\r\n    result.show = this.show;\r\n    result.material = this.material;\r\n    result.color = this.color;\r\n    result.fill = this.fill;\r\n    result.outline = this.outline;\r\n    result.outlineColor = this.outlineColor;\r\n    result.outlineWidth = this.outlineWidth;\r\n    result.shadows = this.shadows;\r\n    result.distanceDisplayCondition = this.distanceDisplayCondition;\r\n    result.gaze = this.gaze;\r\n    return result;\r\n};\r\n\r\nConicArcSensorGraphics.prototype.merge = function (source) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (!defined(source)) {\r\n        throw new DeveloperError('source is required.');\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    this.angle = defaultValue(this.angle, source.angle);\r\n    this.radius = defaultValue(this.radius, source.radius);\r\n    this.stack = defaultValue(this.stack, source.stack);\r\n    this.slice = defaultValue(this.slice, source.slice);\r\n    this.show = defaultValue(this.show, source.show);\r\n    this.color = defaultValue(this.color, source.color);\r\n    this.material = defaultValue(this.material, source.material);\r\n    this.fill = defaultValue(this.fill, source.fill);\r\n    this.outline = defaultValue(this.outline, source.outline);\r\n    this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\r\n    this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\r\n    this.shadows = defaultValue(this.shadows, source.shadows);\r\n    this.distanceDisplayCondition = defaultValue(this.distanceDisplayCondition, source.distanceDisplayCondition);\r\n    this.gaze = defaultValue(this.gaze, source.gaze);\r\n};\r\n\r\nexport {ConicArcSensorGraphics};\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Sensor/ConicArcSensor/ConicArcSensorGraphics.js","import Cesium from 'Cesium';\r\nexport * from './Sensor/Sensor';\r\nexport * from './Material/Material';\r\n\r\nimport {getLinkedPointList} from './Core/getLinkedPointList';\r\nCesium.getLinkedPointList = getLinkedPointList;\n\n\n// WEBPACK FOOTER //\n// ./Source/cesiumGeometry.js","import Cesium from \"Cesium\";\r\n\r\nimport {RectangularSensorPrimitive} from \"./RectangularSensor/RectangularSensorPrimitive\";\r\nimport {RectangularSensorGraphics} from \"./RectangularSensor/RectangularSensorGraphics\";\r\nimport {RectangularSensorVisualizer} from './RectangularSensor/RectangularSensorVisualizer';\r\n\r\n//conicSensor\r\nimport {ConicArcSensorGeometry} from './ConicArcSensor/ConicArcSensorGeometry';\r\nimport  {ConicArcSensorOutlineGeometry} from './ConicArcSensor/ConicArcSensorOutlineGeometry';\r\nimport {ConicArcSensorGraphics} from './ConicArcSensor/ConicArcSensorGraphics';\r\nimport {ConicArcSensorCollection} from './ConicArcSensor/ConicArcSensorCollection';\r\n\r\n\r\n//rectangularSensor\r\nCesium.RectangularSensorPrimitive = RectangularSensorPrimitive;\r\nCesium.RectangularSensorGraphics = RectangularSensorGraphics;\r\nCesium.RectangularSensorVisualizer = RectangularSensorVisualizer;\r\n\r\n//conicSensor\r\nCesium.ConicArcSensorGeometry = ConicArcSensorGeometry;\r\nCesium.ConicArcSensorOutlineGeometry = ConicArcSensorOutlineGeometry;\r\nCesium.ConicArcSensorGraphics = ConicArcSensorGraphics;\r\nCesium.ConicArcSensorCollection = ConicArcSensorCollection;\r\n\r\n\r\nvar DataSourceDisplay = Cesium.DataSourceDisplay;\r\nvar originalDefaultVisualizersCallback = DataSourceDisplay.defaultVisualizersCallback;\r\nDataSourceDisplay.defaultVisualizersCallback = function (scene, entityCluster, dataSource) {\r\n    var entities = dataSource.entities;\r\n    var array = originalDefaultVisualizersCallback(scene, entityCluster, dataSource);\r\n    return array.concat([\r\n        new RectangularSensorVisualizer(scene, entities)\r\n    ]);\r\n};\n\n\n// WEBPACK FOOTER //\n// ./Source/Sensor/Sensor.js","module.exports = \"attribute vec4 position;\\r\\nattribute vec3 normal;\\r\\n\\r\\nvarying vec3 v_position;\\r\\nvarying vec3 v_positionWC;\\r\\nvarying vec3 v_positionEC;\\r\\nvarying vec3 v_normalEC;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    gl_Position = czm_modelViewProjection * position;\\r\\n    v_position = vec3(position);\\r\\n    v_positionWC = (czm_model * position).xyz;\\r\\n    v_positionEC = (czm_modelView * position).xyz;\\r\\n    v_normalEC = czm_normal * normal;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Source/Sensor/RectangularSensor/shaders/RectangularSensorVS.glsl\n// module id = 8\n// module chunks = 0","module.exports = \"#ifdef GL_OES_standard_derivatives\\r\\n    #extension GL_OES_standard_derivatives : enable\\r\\n#endif\\r\\n\\r\\nuniform bool u_showIntersection;\\r\\nuniform bool u_showThroughEllipsoid;\\r\\n\\r\\nuniform float u_radius;\\r\\nuniform float u_xHalfAngle;\\r\\nuniform float u_yHalfAngle;\\r\\nuniform float u_normalDirection;\\r\\nuniform float u_type;\\r\\n\\r\\nvarying vec3 v_position;\\r\\nvarying vec3 v_positionWC;\\r\\nvarying vec3 v_positionEC;\\r\\nvarying vec3 v_normalEC;\\r\\n\\r\\nvec4 getColor(float sensorRadius, vec3 pointEC)\\r\\n{\\r\\n    czm_materialInput materialInput;\\r\\n\\r\\n    vec3 pointMC = (czm_inverseModelView * vec4(pointEC, 1.0)).xyz;\\r\\n    materialInput.st = sensor2dTextureCoordinates(sensorRadius, pointMC);\\r\\n    materialInput.str = pointMC / sensorRadius;\\r\\n\\r\\n    vec3 positionToEyeEC = -v_positionEC;\\r\\n    materialInput.positionToEyeEC = positionToEyeEC;\\r\\n\\r\\n    vec3 normalEC = normalize(v_normalEC);\\r\\n    materialInput.normalEC = u_normalDirection * normalEC;\\r\\n\\r\\n    czm_material material = czm_getMaterial(materialInput);\\r\\n\\r\\n    return mix(czm_phong(normalize(positionToEyeEC), material), vec4(material.diffuse, material.alpha), 0.4);\\r\\n\\r\\n}\\r\\n\\r\\nbool isOnBoundary(float value, float epsilon)\\r\\n{\\r\\n    float width = getIntersectionWidth();\\r\\n    float tolerance = width * epsilon;\\r\\n\\r\\n#ifdef GL_OES_standard_derivatives\\r\\n    float delta = max(abs(dFdx(value)), abs(dFdy(value)));\\r\\n    float pixels = width * delta;\\r\\n    float temp = abs(value);\\r\\n    // There are a couple things going on here.\\r\\n    // First we test the value at the current fragment to see if it is within the tolerance.\\r\\n    // We also want to check if the value of an adjacent pixel is within the tolerance,\\r\\n    // but we don't want to admit points that are obviously not on the surface.\\r\\n    // For example, if we are looking for \\\"value\\\" to be close to 0, but value is 1 and the adjacent value is 2,\\r\\n    // then the delta would be 1 and \\\"temp - delta\\\" would be \\\"1 - 1\\\" which is zero even though neither of\\r\\n    // the points is close to zero.\\r\\n    return temp < tolerance && temp < pixels || (delta < 10.0 * tolerance && temp - delta < tolerance && temp < pixels);\\r\\n#else\\r\\n    return abs(value) < tolerance;\\r\\n#endif\\r\\n}\\r\\n\\r\\nvec4 shade(bool isOnBoundary)\\r\\n{\\r\\n    if (u_showIntersection && isOnBoundary)\\r\\n    {\\r\\n        return getIntersectionColor();\\r\\n    }\\r\\n    if(u_type == 1.0){\\r\\n        return getLineColor();\\r\\n    }\\r\\n    return getColor(u_radius, v_positionEC);\\r\\n}\\r\\n\\r\\nfloat ellipsoidSurfaceFunction(czm_ellipsoid ellipsoid, vec3 point)\\r\\n{\\r\\n    vec3 scaled = ellipsoid.inverseRadii * point;\\r\\n    return dot(scaled, scaled) - 1.0;\\r\\n}\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec3 sensorVertexWC = czm_model[3].xyz;      // (0.0, 0.0, 0.0) in model coordinates\\r\\n    vec3 sensorVertexEC = czm_modelView[3].xyz;  // (0.0, 0.0, 0.0) in model coordinates\\r\\n\\r\\n    //vec3 pixDir = normalize(v_position);\\r\\n    float positionX = v_position.x;\\r\\n    float positionY = v_position.y;\\r\\n    float positionZ = v_position.z;\\r\\n\\r\\n    vec3 zDir = vec3(0.0, 0.0, 1.0);\\r\\n    vec3 lineX = vec3(positionX, 0 ,positionZ);\\r\\n    vec3 lineY = vec3(0, positionY, positionZ);\\r\\n    float resX = dot(normalize(lineX), zDir);\\r\\n    if(resX < cos(u_xHalfAngle)-0.00001){\\r\\n        discard;\\r\\n    }\\r\\n    float resY = dot(normalize(lineY), zDir);\\r\\n    if(resY < cos(u_yHalfAngle)-0.00001){\\r\\n        discard;\\r\\n    }\\r\\n\\r\\n\\r\\n    czm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\\r\\n    float ellipsoidValue = ellipsoidSurfaceFunction(ellipsoid, v_positionWC);\\r\\n\\r\\n    // Occluded by the ellipsoid?\\r\\n\\tif (!u_showThroughEllipsoid)\\r\\n\\t{\\r\\n\\t    // Discard if in the ellipsoid\\r\\n\\t    // PERFORMANCE_IDEA: A coarse check for ellipsoid intersection could be done on the CPU first.\\r\\n\\t    if (ellipsoidValue < 0.0)\\r\\n\\t    {\\r\\n            discard;\\r\\n\\t    }\\r\\n\\r\\n\\t    // Discard if in the sensor's shadow\\r\\n\\t    if (inSensorShadow(sensorVertexWC, ellipsoid, v_positionWC))\\r\\n\\t    {\\r\\n\\t        discard;\\r\\n\\t    }\\r\\n    }\\r\\n\\r\\n    // Notes: Each surface functions should have an associated tolerance based on the floating point error.\\r\\n    bool isOnEllipsoid = isOnBoundary(ellipsoidValue, czm_epsilon3);\\r\\n    //isOnEllipsoid = false;\\r\\n    //if((resX >= 0.8 && resX <= 0.81)||(resY >= 0.8 && resY <= 0.81)){\\r\\n    /*if(false){\\r\\n        gl_FragColor = vec4(1.0,0.0,0.0,1.0);\\r\\n    }else{\\r\\n        gl_FragColor = shade(isOnEllipsoid);\\r\\n    }\\r\\n*/\\r\\n    gl_FragColor = shade(isOnEllipsoid);\\r\\n\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Source/Sensor/RectangularSensor/shaders/RectangularSensorFS.glsl\n// module id = 9\n// module chunks = 0","module.exports = \"uniform vec4 u_intersectionColor;\\nuniform float u_intersectionWidth;\\nuniform vec4 u_lineColor;\\n\\nbool inSensorShadow(vec3 coneVertexWC, czm_ellipsoid ellipsoidEC, vec3 pointWC)\\n{\\n    // Diagonal matrix from the unscaled ellipsoid space to the scaled space.    \\n    vec3 D = ellipsoidEC.inverseRadii;\\n\\n    // Sensor vertex in the scaled ellipsoid space\\n    vec3 q = D * coneVertexWC;\\n    float qMagnitudeSquared = dot(q, q);\\n    float test = qMagnitudeSquared - 1.0;\\n    \\n    // Sensor vertex to fragment vector in the ellipsoid's scaled space\\n    vec3 temp = D * pointWC - q;\\n    float d = dot(temp, q);\\n    \\n    // Behind silhouette plane and inside silhouette cone\\n    return (d < -test) && (d / length(temp) < -sqrt(test));\\n}\\n\\n///////////////////////////////////////////////////////////////////////////////\\n\\nvec4 getLineColor()\\n{\\n    return u_lineColor;\\n}\\n\\nvec4 getIntersectionColor()\\n{\\n    return u_intersectionColor;\\n}\\n\\nfloat getIntersectionWidth()\\n{\\n    return u_intersectionWidth;\\n}\\n\\nvec2 sensor2dTextureCoordinates(float sensorRadius, vec3 pointMC)\\n{\\n    // (s, t) both in the range [0, 1]\\n    float t = pointMC.z / sensorRadius;\\n    float s = 1.0 + (atan(pointMC.y, pointMC.x) / czm_twoPi);\\n    s = s - floor(s);\\n    \\n    return vec2(s, t);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Source/Sensor/RectangularSensor/shaders/RectangularSensor.glsl\n// module id = 10\n// module chunks = 0","module.exports = \"#ifdef GL_OES_standard_derivatives\\r\\n    #extension GL_OES_standard_derivatives : enable\\r\\n#endif\\r\\n\\r\\nuniform bool u_showIntersection;\\r\\nuniform bool u_showThroughEllipsoid;\\r\\n\\r\\nuniform float u_radius;\\r\\nuniform float u_xHalfAngle;\\r\\nuniform float u_yHalfAngle;\\r\\nuniform float u_normalDirection;\\r\\nuniform vec4 u_color;\\r\\n\\r\\nvarying vec3 v_position;\\r\\nvarying vec3 v_positionWC;\\r\\nvarying vec3 v_positionEC;\\r\\nvarying vec3 v_normalEC;\\r\\n\\r\\nvec4 getColor(float sensorRadius, vec3 pointEC)\\r\\n{\\r\\n    czm_materialInput materialInput;\\r\\n\\r\\n    vec3 pointMC = (czm_inverseModelView * vec4(pointEC, 1.0)).xyz;\\r\\n    materialInput.st = sensor2dTextureCoordinates(sensorRadius, pointMC);\\r\\n    materialInput.str = pointMC / sensorRadius;\\r\\n\\r\\n    vec3 positionToEyeEC = -v_positionEC;\\r\\n    materialInput.positionToEyeEC = positionToEyeEC;\\r\\n\\r\\n    vec3 normalEC = normalize(v_normalEC);\\r\\n    materialInput.normalEC = u_normalDirection * normalEC;\\r\\n\\r\\n    czm_material material = czm_getMaterial(materialInput);\\r\\n\\r\\n    material.diffuse = u_color.rgb;\\r\\n    material.alpha = u_color.a;\\r\\n\\r\\n    return mix(czm_phong(normalize(positionToEyeEC), material), vec4(material.diffuse, material.alpha), 0.4);\\r\\n\\r\\n}\\r\\n\\r\\nbool isOnBoundary(float value, float epsilon)\\r\\n{\\r\\n    float width = getIntersectionWidth();\\r\\n    float tolerance = width * epsilon;\\r\\n\\r\\n#ifdef GL_OES_standard_derivatives\\r\\n    float delta = max(abs(dFdx(value)), abs(dFdy(value)));\\r\\n    float pixels = width * delta;\\r\\n    float temp = abs(value);\\r\\n    // There are a couple things going on here.\\r\\n    // First we test the value at the current fragment to see if it is within the tolerance.\\r\\n    // We also want to check if the value of an adjacent pixel is within the tolerance,\\r\\n    // but we don't want to admit points that are obviously not on the surface.\\r\\n    // For example, if we are looking for \\\"value\\\" to be close to 0, but value is 1 and the adjacent value is 2,\\r\\n    // then the delta would be 1 and \\\"temp - delta\\\" would be \\\"1 - 1\\\" which is zero even though neither of\\r\\n    // the points is close to zero.\\r\\n    return temp < tolerance && temp < pixels || (delta < 10.0 * tolerance && temp - delta < tolerance && temp < pixels);\\r\\n#else\\r\\n    return abs(value) < tolerance;\\r\\n#endif\\r\\n}\\r\\n\\r\\nvec4 shade(bool isOnBoundary)\\r\\n{\\r\\n    if (u_showIntersection && isOnBoundary)\\r\\n    {\\r\\n        return getIntersectionColor();\\r\\n    }\\r\\n    return getColor(u_radius, v_positionEC);\\r\\n}\\r\\n\\r\\nfloat ellipsoidSurfaceFunction(czm_ellipsoid ellipsoid, vec3 point)\\r\\n{\\r\\n    vec3 scaled = ellipsoid.inverseRadii * point;\\r\\n    return dot(scaled, scaled) - 1.0;\\r\\n}\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec3 sensorVertexWC = czm_model[3].xyz;      // (0.0, 0.0, 0.0) in model coordinates\\r\\n    vec3 sensorVertexEC = czm_modelView[3].xyz;  // (0.0, 0.0, 0.0) in model coordinates\\r\\n\\r\\n    //vec3 pixDir = normalize(v_position);\\r\\n    float positionX = v_position.x;\\r\\n    float positionY = v_position.y;\\r\\n    float positionZ = v_position.z;\\r\\n\\r\\n    vec3 zDir = vec3(0.0, 0.0, 1.0);\\r\\n    vec3 lineX = vec3(positionX, 0 ,positionZ);\\r\\n    vec3 lineY = vec3(0, positionY, positionZ);\\r\\n    float resX = dot(normalize(lineX), zDir);\\r\\n    if(resX < cos(u_xHalfAngle) - 0.0001){\\r\\n        discard;\\r\\n    }\\r\\n    float resY = dot(normalize(lineY), zDir);\\r\\n    if(resY < cos(u_yHalfAngle)- 0.0001){\\r\\n        discard;\\r\\n    }\\r\\n\\r\\n\\r\\n    czm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\\r\\n    float ellipsoidValue = ellipsoidSurfaceFunction(ellipsoid, v_positionWC);\\r\\n\\r\\n    // Occluded by the ellipsoid?\\r\\n\\tif (!u_showThroughEllipsoid)\\r\\n\\t{\\r\\n\\t    // Discard if in the ellipsoid\\r\\n\\t    // PERFORMANCE_IDEA: A coarse check for ellipsoid intersection could be done on the CPU first.\\r\\n\\t    if (ellipsoidValue < 0.0)\\r\\n\\t    {\\r\\n            discard;\\r\\n\\t    }\\r\\n\\r\\n\\t    // Discard if in the sensor's shadow\\r\\n\\t    if (inSensorShadow(sensorVertexWC, ellipsoid, v_positionWC))\\r\\n\\t    {\\r\\n\\t        discard;\\r\\n\\t    }\\r\\n    }\\r\\n\\r\\n    // Notes: Each surface functions should have an associated tolerance based on the floating point error.\\r\\n    bool isOnEllipsoid = isOnBoundary(ellipsoidValue, czm_epsilon3);\\r\\n    gl_FragColor = shade(isOnEllipsoid);\\r\\n\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Source/Sensor/RectangularSensor/shaders/RectangularSensorScanPlaneFS.glsl\n// module id = 11\n// module chunks = 0","import Cesium from \"Cesium\";\r\n\r\nvar defaultValue = Cesium.defaultValue;\r\nvar defined = Cesium.defined;\r\nvar defineProperties = Cesium.defineProperties;\r\nvar DeveloperError = Cesium.DeveloperError;\r\nvar Event = Cesium.Event;\r\nvar createMaterialPropertyDescriptor = Cesium.createMaterialPropertyDescriptor;\r\nvar createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\n\r\nfunction RectangularSensorGraphics(options) {\r\n    this._show = undefined;\r\n    this._radius = undefined;\r\n    this._xHalfAngle = undefined;\r\n    this._yHalfAngle = undefined;\r\n    this._lineColor = undefined;\r\n    this._showSectorLines = undefined;\r\n    this._showSectorSegmentLines = undefined;\r\n    this._showLateralSurfaces = undefined;\r\n    this._material = undefined;\r\n    this._showDomeSurfaces = undefined;\r\n    this._showDomeLines = undefined;\r\n    this._showIntersection = undefined;\r\n    this._intersectionColor = undefined;\r\n    this._intersectionWidth = undefined;\r\n    this._showThroughEllipsoid = undefined;\r\n    this._gaze = undefined;\r\n    this._showScanPlane = undefined;\r\n    this._scanPlaneColor = undefined;\r\n    this._scanPlaneMode = undefined;\r\n    this._scanPlaneRate = undefined;\r\n    this._definitionChanged = new Event();\r\n    this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\r\n}\r\n\r\ndefineProperties(RectangularSensorGraphics.prototype, {\r\n    definitionChanged: {\r\n        get: function () {\r\n            return this._definitionChanged;\r\n        }\r\n    },\r\n\r\n    show: createPropertyDescriptor('show'),\r\n    radius: createPropertyDescriptor('radius'),\r\n    xHalfAngle: createPropertyDescriptor('xHalfAngle'),\r\n    yHalfAngle: createPropertyDescriptor('yHalfAngle'),\r\n    lineColor: createPropertyDescriptor('lineColor'),\r\n    showSectorLines: createPropertyDescriptor('showSectorLines'),\r\n    showSectorSegmentLines: createPropertyDescriptor('showSectorSegmentLines'),\r\n    showLateralSurfaces: createPropertyDescriptor('showLateralSurfaces'),\r\n    material: createMaterialPropertyDescriptor('material'),\r\n    showDomeSurfaces: createPropertyDescriptor('showDomeSurfaces'),\r\n    showDomeLines: createPropertyDescriptor('showDomeLines '),\r\n    showIntersection: createPropertyDescriptor('showIntersection'),\r\n    intersectionColor: createPropertyDescriptor('intersectionColor'),\r\n    intersectionWidth: createPropertyDescriptor('intersectionWidth'),\r\n    showThroughEllipsoid: createPropertyDescriptor('showThroughEllipsoid'),\r\n    gaze: createPropertyDescriptor('gaze'),\r\n    showScanPlane: createPropertyDescriptor('showScanPlane'),\r\n    scanPlaneColor: createPropertyDescriptor('scanPlaneColor'),\r\n    scanPlaneMode: createPropertyDescriptor('scanPlaneMode'),\r\n    scanPlaneRate: createPropertyDescriptor('scanPlaneRate'),\r\n});\r\n\r\nRectangularSensorGraphics.prototype.clone = function (result) {\r\n    if (!defined(result)) {\r\n        result = new RectangularSensorGraphics();\r\n    }\r\n\r\n    result.show = this.show;\r\n    result.radius = this.radius;\r\n    result.xHalfAngle = this.xHalfAngle;\r\n    result.yHalfAngle = this.yHalfAngle;\r\n    result.lineColor = this.lineColor;\r\n    result.showSectorLines = this.showSectorLines;\r\n    result.showSectorSegmentLines = this.showSectorSegmentLines;\r\n    result.showLateralSurfaces = this.showLateralSurfaces;\r\n    result.material = this.material;\r\n    result.showDomeSurfaces = this.showDomeSurfaces;\r\n    result.showDomeLines = this.showDomeLines;\r\n    result.showIntersection = this.showIntersection;\r\n    result.intersectionColor = this.intersectionColor;\r\n    result.intersectionWidth = this.intersectionWidth;\r\n    result.showThroughEllipsoid = this.showThroughEllipsoid;\r\n    result.gaze = this.gaze;\r\n    result.showScanPlane = this.showScanPlane;\r\n    result.scanPlaneColor = this.scanPlaneColor;\r\n    result.scanPlaneMode = this.scanPlaneMode;\r\n    result.scanPlaneRate = this.scanPlaneRate;\r\n\r\n    return result;\r\n};\r\n\r\nRectangularSensorGraphics.prototype.merge = function (source) {\r\n    if (!defined(source)) {\r\n        throw new DeveloperError('source is required.');\r\n    }\r\n\r\n    this.show = defaultValue(this.show, source.show);\r\n    this.radius = defaultValue(this.radius, source.radius);\r\n    this.xHalfAngle = defaultValue(this.xHalfAngle, source.xHalfAngle);\r\n    this.yHalfAngle = defaultValue(this.yHalfAngle, source.yHalfAngle);\r\n    this.lineColor = defaultValue(this.lineColor, source.lineColor);\r\n    this.showSectorLines = defaultValue(this.showSectorLines, source.showSectorLines);\r\n    this.showSectorSegmentLines = defaultValue(this.showSectorSegmentLines, source.showSectorSegmentLines);\r\n    this.showLateralSurfaces = defaultValue(this.showLateralSurfaces, source.showLateralSurfaces);\r\n    this.material = defaultValue(this.material, source.material);\r\n    this.showDomeSurfaces = defaultValue(this.showDomeSurfaces, source.showDomeSurfaces);\r\n    this.showDomeLines = defaultValue(this.showDomeLines, source.showDomeLines);\r\n    this.showIntersection = defaultValue(this.showIntersection, source.showIntersection);\r\n    this.intersectionColor = defaultValue(this.intersectionColor, source.intersectionColor);\r\n    this.intersectionWidth = defaultValue(this.intersectionWidth, source.intersectionWidth);\r\n    this.showThroughEllipsoid = defaultValue(this.showThroughEllipsoid, source.showThroughEllipsoid);\r\n    this.gaze = defaultValue(this.gaze, source.gaze);\r\n    this.showScanPlane = defaultValue(this.showScanPlane, source.showScanPlane);\r\n    this.scanPlaneColor = defaultValue(this.scanPlaneColor, source.scanPlaneColor);\r\n    this.scanPlaneMode = defaultValue(this.scanPlaneMode, source.scanPlaneMode);\r\n    this.scanPlaneRate = defaultValue(this.scanPlaneRate, source.scanPlaneRate);\r\n};\r\n\r\nexport {RectangularSensorGraphics};\n\n\n// WEBPACK FOOTER //\n// ./Source/Sensor/RectangularSensor/RectangularSensorGraphics.js","import Cesium from \"Cesium\";\r\nimport {RectangularSensorPrimitive} from \"./RectangularSensorPrimitive\";\r\nimport {removePrimitive} from \"../../Core/remove-primitive\";\r\n\r\nvar AssociativeArray = Cesium.AssociativeArray;\r\nvar Cartesian3 = Cesium.Cartesian3;\r\nvar Color = Cesium.Color;\r\nvar defined = Cesium.defined;\r\nvar destroyObject = Cesium.destroyObject;\r\nvar DeveloperError = Cesium.DeveloperError;\r\nvar Matrix3 = Cesium.Matrix3;\r\nvar Matrix4 = Cesium.Matrix4;\r\nvar Quaternion = Cesium.Quaternion;\r\nvar MaterialProperty = Cesium.MaterialProperty;\r\nvar Property = Cesium.Property;\r\n\r\nvar matrix3Scratch = new Matrix3();\r\nvar matrix4Scratch = new Matrix4();\r\nvar cachedPosition = new Cartesian3();\r\nvar cachedGazePosition = new Cartesian3();\r\nvar cachedOrientation = new Quaternion();\r\nvar diffVectorScratch = new Cartesian3();\r\nvar orientationScratch = new Quaternion();\r\n\r\nvar RectangularSensorVisualizer = function (scene, entityCollection) {\r\n    // >>includeStart('debug', pragmas.debug);\r\n    if (!defined(scene)) {\r\n        throw new DeveloperError('scene is required.');\r\n    }\r\n    if (!defined(entityCollection)) {\r\n        throw new DeveloperError('entityCollection is required.');\r\n    }\r\n    // >>includeEnd('debug');\r\n\r\n    entityCollection.collectionChanged.addEventListener(RectangularSensorVisualizer.prototype._onCollectionChanged, this);\r\n\r\n    this._scene = scene;\r\n    this._primitives = scene.primitives;\r\n    this._entityCollection = entityCollection;\r\n    this._hash = {};\r\n    this._entitiesToVisualize = new AssociativeArray();\r\n\r\n    this._onCollectionChanged(entityCollection, entityCollection.values, [], []);\r\n};\r\n\r\n/**\r\n * Updates the primitives created by this visualizer to match their\r\n * Entity counterpart at the given time.\r\n *\r\n * @param {JulianDate} time The time to update to.\r\n * @returns {Boolean} This function always returns true.\r\n */\r\nRectangularSensorVisualizer.prototype.update = function (time) {\r\n    // >>includeStart('debug', pragmas.debug);\r\n    if (!defined(time)) {\r\n        throw new DeveloperError('time is required.');\r\n    }\r\n    // >>includeEnd('debug');\r\n\r\n    var entities = this._entitiesToVisualize.values;\r\n    var hash = this._hash;\r\n    var primitives = this._primitives;\r\n\r\n    for (var i = 0, len = entities.length; i < len; i++) {\r\n        var entity = entities[i];\r\n        var rectangularSensorGraphics = entity._rectangularSensor;\r\n\r\n        var position;\r\n        var orientation;\r\n        var radius;\r\n        var xHalfAngle;\r\n        var yHalfAngle;\r\n        var data = hash[entity.id];\r\n        var show = entity.isShowing && entity.isAvailable(time) && Property.getValueOrDefault(rectangularSensorGraphics._show, time, true);\r\n\r\n        if (show) {\r\n            position = Property.getValueOrUndefined(entity._position, time, cachedPosition);\r\n            orientation = Property.getValueOrUndefined(entity._orientation, time, cachedOrientation);\r\n            radius = Property.getValueOrUndefined(rectangularSensorGraphics._radius, time);\r\n            xHalfAngle = Property.getValueOrUndefined(rectangularSensorGraphics._xHalfAngle, time);\r\n            yHalfAngle = Property.getValueOrUndefined(rectangularSensorGraphics._yHalfAngle, time);\r\n            show = defined(position) && defined(xHalfAngle) && defined(yHalfAngle);\r\n        }\r\n\r\n        if (!show) {\r\n            // don't bother creating or updating anything else\r\n            if (defined(data)) {\r\n                data.primitive.show = false;\r\n            }\r\n            continue;\r\n        }\r\n\r\n        var primitive = defined(data) ? data.primitive : undefined;\r\n        if (!defined(primitive)) {\r\n            primitive = new RectangularSensorPrimitive();\r\n            primitive.id = entity;\r\n            primitives.add(primitive);\r\n\r\n            data = {\r\n                primitive: primitive,\r\n                position: undefined,\r\n                orientation: undefined\r\n            };\r\n            hash[entity.id] = data;\r\n        }\r\n\r\n        var gaze = Property.getValueOrUndefined(rectangularSensorGraphics._gaze, time);\r\n        if (defined(gaze)) {\r\n\r\n            var targetPosition = Property.getValueOrUndefined(gaze._position, time, cachedGazePosition);\r\n\r\n            if (!defined(position) || !defined(targetPosition)) {\r\n                continue;\r\n            }\r\n\r\n            var diffVector = Cartesian3.subtract(position, targetPosition, diffVectorScratch);\r\n            var rotate = Cartesian3.angleBetween(Cesium.Cartesian3.UNIT_Z, diffVector);\r\n            var cross = Cartesian3.cross(Cesium.Cartesian3.UNIT_Z, diffVector, diffVectorScratch);\r\n            var orientation = Quaternion.fromAxisAngle(cross, (rotate - Math.PI), orientationScratch);\r\n\r\n            //replace original radius\r\n            radius = Cartesian3.distance(position, targetPosition);\r\n            primitive.modelMatrix = Matrix4.fromRotationTranslation(Matrix3.fromQuaternion(orientation, matrix3Scratch), position, primitive.modelMatrix);\r\n        } else {\r\n            if (!Cartesian3.equals(position, data.position) || !Quaternion.equals(orientation, data.orientation)) {\r\n                if (defined(orientation)) {\r\n                    primitive.modelMatrix = Matrix4.fromRotationTranslation(Matrix3.fromQuaternion(orientation, matrix3Scratch), position, primitive.modelMatrix);\r\n                    data.position = Cartesian3.clone(position, data.position);\r\n                    data.orientation = Quaternion.clone(orientation, data.orientation);\r\n                } else {\r\n                    primitive.modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(position);\r\n                    data.position = Cartesian3.clone(position, data.position);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        primitive.show = true;\r\n        primitive.gaze = gaze;\r\n        primitive.radius = radius;\r\n        primitive.xHalfAngle = xHalfAngle;\r\n        primitive.yHalfAngle = yHalfAngle;\r\n        primitive.lineColor = Property.getValueOrDefault(rectangularSensorGraphics._lineColor, time, Color.WHITE);\r\n        primitive.showSectorLines = Property.getValueOrDefault(rectangularSensorGraphics._showSectorLines, time, true);\r\n        primitive.showSectorSegmentLines = Property.getValueOrDefault(rectangularSensorGraphics._showSectorSegmentLines, time, true);\r\n        primitive.showLateralSurfaces = Property.getValueOrDefault(rectangularSensorGraphics._showLateralSurfaces, time, true);\r\n        primitive.material = MaterialProperty.getValue(time, rectangularSensorGraphics._material, primitive.material);\r\n        primitive.showDomeSurfaces = Property.getValueOrDefault(rectangularSensorGraphics._showDomeSurfaces, time, true);\r\n        primitive.showDomeLines = Property.getValueOrDefault(rectangularSensorGraphics._showDomeLines, time, true);\r\n        primitive.showIntersection = Property.getValueOrDefault(rectangularSensorGraphics._showIntersection, time, true);\r\n        primitive.intersectionColor = Property.getValueOrDefault(rectangularSensorGraphics._intersectionColor, time, Color.WHITE);\r\n        primitive.intersectionWidth = Property.getValueOrDefault(rectangularSensorGraphics._intersectionWidth, time, 1);\r\n        primitive.showThroughEllipsoid = Property.getValueOrDefault(rectangularSensorGraphics._showThroughEllipsoid, time, true);\r\n        primitive.scanPlaneMode = Property.getValueOrDefault(rectangularSensorGraphics._scanPlaneMode, time);\r\n        primitive.scanPlaneColor = Property.getValueOrDefault(rectangularSensorGraphics._scanPlaneColor, time, Color.WHITE);\r\n        primitive.showScanPlane = Property.getValueOrDefault(rectangularSensorGraphics._showScanPlane, time, true);\r\n        primitive.scanPlaneRate = Property.getValueOrDefault(rectangularSensorGraphics._scanPlaneRate, time, 1);\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Returns true if this object was destroyed; otherwise, false.\r\n *\r\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\r\n */\r\nRectangularSensorVisualizer.prototype.isDestroyed = function () {\r\n    return false;\r\n};\r\n\r\n/**\r\n * Removes and destroys all primitives created by this instance.\r\n */\r\nRectangularSensorVisualizer.prototype.destroy = function () {\r\n    var entities = this._entitiesToVisualize.values;\r\n    var hash = this._hash;\r\n    var primitives = this._primitives;\r\n    for (var i = entities.length - 1; i > -1; i--) {\r\n        removePrimitive(entities[i], hash, primitives);\r\n    }\r\n    return destroyObject(this);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nRectangularSensorVisualizer.prototype._onCollectionChanged = function (entityCollection, added, removed, changed) {\r\n    var i;\r\n    var entity;\r\n    var entities = this._entitiesToVisualize;\r\n    var hash = this._hash;\r\n    var primitives = this._primitives;\r\n\r\n    for (i = added.length - 1; i > -1; i--) {\r\n        entity = added[i];\r\n        if (defined(entity._rectangularSensor) && defined(entity._position)) {\r\n            entities.set(entity.id, entity);\r\n        }\r\n    }\r\n\r\n    for (i = changed.length - 1; i > -1; i--) {\r\n        entity = changed[i];\r\n        if (defined(entity._rectangularSensor) && defined(entity._position)) {\r\n            entities.set(entity.id, entity);\r\n        } else {\r\n            removePrimitive(entity, hash, primitives);\r\n            entities.remove(entity.id);\r\n        }\r\n    }\r\n\r\n    for (i = removed.length - 1; i > -1; i--) {\r\n        entity = removed[i];\r\n        removePrimitive(entity, hash, primitives);\r\n        entities.remove(entity.id);\r\n    }\r\n};\r\n\r\nexport {RectangularSensorVisualizer};\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Sensor/RectangularSensor/RectangularSensorVisualizer.js","import Cesium from \"Cesium\";\r\n\r\nvar defined = Cesium.defined;\r\n\r\nexport function removePrimitive(entity, hash, primitives) {\r\n    var data = hash[entity.id];\r\n    if (defined(data)) {\r\n        var primitive = data.primitive;\r\n        primitives.remove(primitive);\r\n        if (!primitive.isDestroyed()) {\r\n            primitive.destroy();\r\n        }\r\n        delete hash[entity.id];\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./Source/Core/remove-primitive.js","import Cesium from \"Cesium\";\r\nimport {ConicArcSensorGeometry} from \"./ConicArcSensorGeometry\";\r\nimport {ConicArcSensorOutlineGeometry} from \"./ConicArcSensorOutlineGeometry\";\r\nimport {ConicArcSensor} from \"./ConicArcSensor\";\r\n\r\nvar defaultValue = Cesium.defaultValue;\r\nvar defined = Cesium.defined;\r\nvar Viewer = Cesium.Viewer;\r\nvar Transforms = Cesium.Transforms;\r\nvar DeveloperError = Cesium.DeveloperError;\r\nvar ColorGeometryInstanceAttribute = Cesium.ColorGeometryInstanceAttribute;\r\nvar Color = Cesium.Color;\r\nvar Primitive = Cesium.Primitive;\r\nvar PerInstanceColorAppearance = Cesium.PerInstanceColorAppearance;\r\nvar Cartesian3 = Cesium.Cartesian3;\r\nvar VertexFormat = Cesium.VertexFormat;\r\nvar Quaternion = Cesium.Quaternion;\r\nvar Matrix3 = Cesium.Matrix3;\r\nvar Matrix4 = Cesium.Matrix4;\r\nvar Property = Cesium.Property;\r\nvar Event = Cesium.Event;\r\nvar DistanceDisplayCondition = Cesium.DistanceDisplayCondition;\r\nvar DistanceDisplayConditionGeometryInstanceAttribute = Cesium.DistanceDisplayConditionGeometryInstanceAttribute;\r\n\r\nfunction ConicArcSensorCollection(viewer) {\r\n    var self = this;\r\n    if (!defined(viewer)) {\r\n        throw new DeveloperError('viewer is required.');\r\n    }\r\n\r\n    this._viewer = viewer;\r\n\r\n    var scene = viewer.scene;\r\n    this._scene = scene;\r\n\r\n    var clock = viewer.clock;\r\n    this._clock = clock;\r\n\r\n    this._primitives = scene.primitives;\r\n    this._primitive = undefined;\r\n    this._outlinePrimitive = undefined;\r\n\r\n    this._conicArcSensorCollection = [];\r\n\r\n    clock.onTick.addEventListener(function () {\r\n        self.update();\r\n    });\r\n}\r\n\r\nvar matrix3Scratch = new Matrix3();\r\nvar matrix4Scratch = new Matrix4();\r\nvar positionScratch = new Cartesian3();\r\nvar targetPositionScratch = new Cartesian3();\r\nvar diffVectorScratch = new Cartesian3();\r\nvar orientationScratch = new Quaternion();\r\n\r\nConicArcSensorCollection.prototype.add = function (conicArcSensor) {\r\n\r\n    if (!(conicArcSensor instanceof ConicArcSensor)) {\r\n        conicArcSensor = new ConicArcSensor(conicArcSensor);\r\n    }\r\n\r\n    this._conicArcSensorCollection.push(conicArcSensor);\r\n\r\n    return conicArcSensor;\r\n};\r\n\r\nConicArcSensorCollection.prototype.remove = function (conicArcSensor) {\r\n    var index = this._conicArcSensorCollection.indexOf(conicArcSensor);\r\n    if (index !== -1) {\r\n        this._conicArcSensorCollection.splice(index, 1);\r\n    }\r\n};\r\n\r\nConicArcSensorCollection.prototype.removeAll = function () {\r\n    this._conicArcSensorCollection.length = 0;\r\n};\r\n\r\nConicArcSensorCollection.prototype.update = function () {\r\n    var time = this._clock.currentTime;\r\n\r\n    var conicArcSensorCollection = this._conicArcSensorCollection;\r\n    var primitives = this._primitives;\r\n    var primitive = this._primitive;\r\n    var outlinePrimitive = this._outlinePrimitive;\r\n    var instances = [];\r\n    var outlineInstances = [];\r\n\r\n    if (defined(primitive)) {\r\n        primitives.removeAndDestroy(primitive);\r\n    }\r\n    if (defined(outlinePrimitive)) {\r\n        primitives.removeAndDestroy(outlinePrimitive);\r\n    }\r\n\r\n    for (var i = 0, len = conicArcSensorCollection.length; i < len; i++) {\r\n        var entity = conicArcSensorCollection[i];\r\n        var conicArcSensor = entity._conicArcSensor;\r\n\r\n        if (!Property.getValueOrDefault(conicArcSensor.show, time, true)) {\r\n            continue;\r\n        }\r\n\r\n        var angle = conicArcSensor.angle;\r\n        var radius = conicArcSensor.radius;\r\n        var stack = conicArcSensor.stack;\r\n        var slice = conicArcSensor.slice;\r\n\r\n        if (!defined(angle)) {\r\n            continue;\r\n        }\r\n\r\n        var show = Property.getValueOrDefault(entity.show, time, true);\r\n        if (!show) {\r\n            continue;\r\n        }\r\n\r\n        var position = Property.getValueOrUndefined(entity.position, time, positionScratch);\r\n\r\n        if (!defined(position)) {\r\n            continue;\r\n        }\r\n\r\n        var modelMatrix;\r\n        var gaze = conicArcSensor.gaze;\r\n        if (defined(gaze)) {\r\n            //ignore original orientation\r\n            var targetPosition = Property.getValueOrUndefined(gaze.position, time, targetPositionScratch);\r\n\r\n            if (!defined(position) || !defined(targetPosition)) {\r\n                continue;\r\n            }\r\n\r\n            var diffVector = Cartesian3.subtract(position, targetPosition, diffVectorScratch);\r\n            var rotate = Cartesian3.angleBetween(Cesium.Cartesian3.UNIT_Z, diffVector);\r\n            var cross = Cartesian3.cross(Cesium.Cartesian3.UNIT_Z, diffVector, diffVectorScratch);\r\n            //朝上\r\n            //var orientation = Quaternion.fromAxisAngle(cross, (rotate - Math.PI), orientationScratch);\r\n            var orientation = Quaternion.fromAxisAngle(cross, rotate, orientationScratch);\r\n\r\n            //replace original dimensions\r\n            var distance = Cartesian3.distance(position, targetPosition);\r\n\r\n            radius = 1;\r\n            modelMatrix = Matrix4.fromRotationTranslation(\r\n                Cesium.Matrix3.multiplyByScalar(Matrix3.fromQuaternion(orientation, matrix3Scratch), distance, matrix3Scratch),\r\n                position, matrix4Scratch);\r\n\r\n        } else {\r\n            var orientation = Property.getValueOrUndefined(entity.orientation, time, orientationScratch);\r\n            if (!defined(orientation)) {\r\n                modelMatrix = Transforms.eastNorthUpToFixedFrame(position, undefined, matrix4Scratch);\r\n            } else {\r\n                modelMatrix = Matrix4.fromRotationTranslation(Matrix3.fromQuaternion(orientation, matrix3Scratch), position, matrix4Scratch);\r\n            }\r\n        }\r\n\r\n        if (!defined(modelMatrix)) {\r\n            continue;\r\n        }\r\n\r\n        var geometry = entity._geometry;\r\n        if (!defined(geometry)) {\r\n            var conic;\r\n            conic = new ConicArcSensorGeometry({\r\n                vertexFormat: Cesium.VertexFormat.POSITION_AND_NORMAL,\r\n                angle: angle,\r\n                radius: radius,\r\n                stackPartitions: stack,\r\n                slicePartitions: slice,\r\n            });\r\n            entity._geometry = ConicArcSensorGeometry.createGeometry(conic);\r\n            geometry = entity._geometry;\r\n        }\r\n\r\n        //var distanceDisplayCondition = Property.getValueOrDefault(conicArcSensor.distanceDisplayCondition, time, entity._distanceDisplayCondition);\r\n        //var distanceDisplayConditionAttribute = DistanceDisplayConditionGeometryInstanceAttribute.fromDistanceDisplayCondition(distanceDisplayCondition);\r\n        //var shadows = Property.getValueOrDefault(conicArcSensor.shadows, time, ShadowMode.DISABLED);\r\n        var color = conicArcSensor.color;\r\n        var outline = conicArcSensor.outline;\r\n        var outlineWidth = conicArcSensor.outlineWidth;\r\n        if (!defined(outlineWidth)) {\r\n            outlineWidth = 1;\r\n        }\r\n        var outlineColor = conicArcSensor.outlineColor;\r\n        if (!defined(outlineColor)) {\r\n            outlineColor = Color.WHITE;\r\n        }\r\n\r\n        var instance = new Cesium.GeometryInstance({\r\n            geometry: geometry,\r\n            modelMatrix: modelMatrix,\r\n            attributes: {\r\n                color: Cesium.ColorGeometryInstanceAttribute.fromColor(color),\r\n                //distanceDisplayCondition: distanceDisplayConditionAttribute\r\n            }\r\n        });\r\n        instances.push(instance);\r\n\r\n        if (outline) {\r\n            var outlineGeometry = entity._outlineGeometry;\r\n            if (!defined(outlineGeometry)) {\r\n                var conicOutline;\r\n                conicOutline = new ConicArcSensorOutlineGeometry({\r\n                    vertexFormat: Cesium.VertexFormat.POSITION_ONLY,\r\n                    angle: angle,\r\n                    radius: radius\r\n                });\r\n                entity._outlineGeometry = ConicArcSensorOutlineGeometry.createGeometry(conicOutline);\r\n                outlineGeometry = entity._outlineGeometry;\r\n            }\r\n\r\n            var instance = new Cesium.GeometryInstance({\r\n                geometry: outlineGeometry,\r\n                modelMatrix: modelMatrix,\r\n                attributes: {\r\n                    color: Cesium.ColorGeometryInstanceAttribute.fromColor(outlineColor),\r\n                    //distanceDisplayCondition: distanceDisplayConditionAttribute\r\n                }\r\n            });\r\n            outlineInstances.push(instance);\r\n        }\r\n    }\r\n\r\n    if (instances.length > 0) {\r\n        this._primitive = this._primitives.add(new Primitive({\r\n            asynchronous: false,\r\n            geometryInstances: instances,\r\n            appearance: new PerInstanceColorAppearance({\r\n                flat: false,\r\n                translucent: true,\r\n                closed: true\r\n            })\r\n        }));\r\n    }\r\n\r\n    if (outlineInstances.length > 0) {\r\n        this._outlinePrimitive = this._primitives.add(new Primitive({\r\n            asynchronous: false,\r\n            geometryInstances: outlineInstances,\r\n            appearance: new PerInstanceColorAppearance({\r\n                flat: true,\r\n                translucent: true,\r\n                renderState: {\r\n                    lineWidth: this._scene.clampLineWidth(outlineWidth)\r\n                }\r\n            })\r\n        }));\r\n    }\r\n};\r\n\r\nexport {ConicArcSensorCollection};\n\n\n// WEBPACK FOOTER //\n// ./Source/Sensor/ConicArcSensor/ConicArcSensorCollection.js","import Cesium from \"Cesium\";\r\nimport {ConicArcSensorGraphics} from \"./ConicArcSensorGraphics\";\r\n\r\nvar Entity = Cesium.Entity;\r\nvar Event = Cesium.Event;\r\nvar ConstantPositionProperty = Cesium.ConstantPositionProperty;\r\nvar createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\nvar DistanceDisplayCondition = Cesium.DistanceDisplayCondition;\r\nvar DistanceDisplayConditionGeometryInstanceAttribute = Cesium.DistanceDisplayConditionGeometryInstanceAttribute;\r\n\r\nfunction createConstantPositionProperty(value) {\r\n    return new ConstantPositionProperty(value);\r\n}\r\n\r\nfunction createPositionPropertyDescriptor(name) {\r\n    return createPropertyDescriptor(name, undefined, createConstantPositionProperty);\r\n}\r\n\r\nfunction ConicArcSensor(options) {\r\n    options = options || {};\r\n\r\n    this._position = undefined;\r\n    this._orientation = undefined;\r\n    this._show = undefined;\r\n\r\n    var conicArcSensor = options.conicArcSensor;\r\n    if (!(conicArcSensor instanceof ConicArcSensorGraphics)) {\r\n        conicArcSensor = new ConicArcSensorGraphics(conicArcSensor);\r\n    }\r\n    this._conicArcSensor = conicArcSensor;\r\n\r\n\r\n    this._distanceDisplayCondition = new DistanceDisplayCondition();\r\n    this._geometry = undefined;\r\n    this._outlineGeometry = undefined;\r\n\r\n    this._definitionChanged = new Event();\r\n\r\n    this.merge(options);\r\n}\r\n\r\nObject.defineProperties(ConicArcSensor.prototype, {\r\n    position: createPositionPropertyDescriptor('position'),\r\n    orientation: createPropertyDescriptor('orientation'),\r\n    show: createPropertyDescriptor('show'),\r\n});\r\n\r\nConicArcSensor.prototype.merge = function (options) {\r\n    this.position = options.position;\r\n    this.orientation = options.orientation;\r\n    this.show = options.show;\r\n};\r\n\r\nConicArcSensor.prototype.gazeAt = function (entity) {\r\n    if (entity instanceof Entity) {\r\n        this._conicArcSensor.gaze = entity;\r\n    }\r\n};\r\n\r\nexport {ConicArcSensor};\n\n\n// WEBPACK FOOTER //\n// ./Source/Sensor/ConicArcSensor/ConicArcSensor.js","import Cesium from 'Cesium';\r\n\r\nimport {PolylineAttackLinkMaterialProperty} from './MaterialProperty/PolylineAttackLinkMaterialProperty';\r\nimport {PolylineArrowLinkMaterialProperty} from './MaterialProperty/PolylineArrowLinkMaterialProperty';\r\nimport {PolylineGlowLinkMaterialProperty} from './MaterialProperty/PolylineGlowLinkMaterialProperty';\r\nimport {PolylinePulseLinkMaterialProperty} from './MaterialProperty/PolylinePulseLinkMaterialProperty';\r\nimport {PolylineTrailLinkMaterialProperty} from './MaterialProperty/PolylineTrailLinkMaterialProperty';\r\nimport {PolylineTrailMaterialProperty} from './MaterialProperty/PolylineTrailMaterialProperty';\r\nimport {ElliposidFadeMaterialProperty} from './MaterialProperty/ElliposidFadeMaterialProperty';\r\n\r\nimport polylineLinkMaterial from './Shaders/polylineLinkMaterial.glsl';\r\nimport polylinePulseMaterial from './Shaders/polylinePulseMaterial.glsl';\r\nimport polylineGlowMaterial from './Shaders/polylineGlowMaterial.glsl';\r\nimport polylineTrailMaterial from './Shaders/polylineTrailMaterial.glsl';\r\nimport ElliposidFadeMaterial from './Shaders/ElliposidFadeMaterial.glsl';\r\nimport {util} from '../Core/util';\r\n\r\nvar Color = Cesium.Color;\r\nvar ShaderSource = Cesium.ShaderSource;\r\nvar Material = Cesium.Material;\r\nvar baseUrl = util.getBaseUrl();\r\n\r\n/**\r\n * 飞线特效Material\r\n */\r\nMaterial.PolylineTrailType = 'PolylineTrail';\r\nMaterial.PolylineTrailImage = baseUrl + 'Textures/Trail2.png';\r\nMaterial._materialCache.addMaterial(Material.PolylineTrailType, {\r\n    fabric: {\r\n        type: Material.PolylineTrailType,\r\n        uniforms: {\r\n            color: new Color(1, 0, 0, 1.0),\r\n            image: Material.PolylineTrailImage,\r\n            time: 0,\r\n        },\r\n        source: polylineLinkMaterial\r\n    },\r\n    translucent: function () {\r\n        return true;\r\n    }\r\n});\r\n\r\n/**\r\n * 线的攻击特效Material\r\n */\r\nMaterial.PolylineAttackLinkType = 'PolylineAttackLink';\r\nMaterial.PolylineAttackLinkImage = baseUrl + 'Textures/DotTransparent.png';\r\nMaterial._materialCache.addMaterial(Material.PolylineAttackLinkType, {\r\n    fabric: {\r\n        type: Material.PolylineAttackLinkType,\r\n        uniforms: {\r\n            color: new Color(1, 0, 0, 1.0),\r\n            image: Material.PolylineAttackLinkImage,\r\n            time: 0,\r\n        },\r\n        source: polylineLinkMaterial\r\n    },\r\n    translucent: function () {\r\n        return true;\r\n    }\r\n});\r\n\r\n/**\r\n * 线的箭头特效Material\r\n */\r\nMaterial.PolylineArrowLinkType = 'PolylineArrowLink';\r\nMaterial.PolylineArrowLinkImage = baseUrl + 'Textures/ArrowOpacity.png';\r\nMaterial._materialCache.addMaterial(Material.PolylineArrowLinkType, {\r\n    fabric: {\r\n        type: Material.PolylineArrowLinkType,\r\n        uniforms: {\r\n            color: new Color(1, 0, 0, 1.0),\r\n            image: Material.PolylineArrowLinkImage,\r\n            time: 0,\r\n        },\r\n        source: polylineLinkMaterial\r\n    },\r\n    translucent: function () {\r\n        return true;\r\n    }\r\n});\r\n\r\n/**\r\n * 线的滋滋滋特效Material\r\n */\r\nMaterial.PolylinePulseLinkType = 'PolylinePulseLink';\r\nMaterial.PolylinePulseLinkImage = baseUrl + 'Textures/LinkPulse.png';\r\nMaterial._materialCache.addMaterial(Material.PolylinePulseLinkType, {\r\n    fabric: {\r\n        type: Material.PolylinePulseLinkType,\r\n        uniforms: {\r\n            color: new Color(1, 0, 0, 1.0),\r\n            image: Material.PolylinePulseLinkImage,\r\n            time: 0,\r\n        },\r\n        source: polylineLinkMaterial\r\n    },\r\n    translucent: function () {\r\n        return true;\r\n    }\r\n});\r\n\r\nMaterial.PolylineGrowLinkType = 'PolylineGrowLinkType';\r\nMaterial._materialCache.addMaterial(Material.PolylineGrowLinkType, {\r\n    fabric: {\r\n        type: Material.PolylineGrowLinkType,\r\n        uniforms: {\r\n            glowPower: 0.1,\r\n            color: new Color(1, 0, 0, 1.0)\r\n        },\r\n        source: polylineGlowMaterial\r\n    },\r\n    translucent: function () {\r\n        return true;\r\n    }\r\n});\r\n\r\nMaterial.PolylineTrailLinkType = 'PolylineTrailLinkType';\r\nMaterial.PolylineTrailLinkImage = baseUrl + 'Textures/LinkTrail.png';\r\nMaterial._materialCache.addMaterial(Material.PolylineTrailLinkType, {\r\n    fabric: {\r\n        type: Material.PolylineTrailLinkType,\r\n        uniforms: {\r\n            image:Material.PolylineTrailLinkImage,\r\n            color: new Color(1, 0, 0, 1.0)\r\n        },\r\n        source: polylineTrailMaterial\r\n    },\r\n    translucent: function () {\r\n        return true;\r\n    }\r\n});\r\n\r\n/**\r\n * 渐变的气泡\r\n * @type {string}\r\n */\r\nMaterial.EllipsoidFadeType = 'EllipsoidFade';\r\nMaterial._materialCache.addMaterial(Material.EllipsoidFadeType, {\r\n    fabric: {\r\n        type: Material.EllipsoidFadeType,\r\n        uniforms: {\r\n            color: new Color(1, 0, 0, 1.0),\r\n            time: 1,\r\n\r\n        },\r\n        source: ElliposidFadeMaterial\r\n    },\r\n    translucent: function () {\r\n        return true;\r\n    }\r\n});\r\nCesium.PolylineTrailMaterialProperty = PolylineTrailMaterialProperty;\r\nCesium.PolylineAttackLinkMaterialProperty = PolylineAttackLinkMaterialProperty;\r\nCesium.PolylineArrowLinkMaterialProperty = PolylineArrowLinkMaterialProperty;\r\nCesium.PolylineGlowLinkMaterialProperty = PolylineGlowLinkMaterialProperty;\r\nCesium.PolylinePulseLinkMaterialProperty = PolylinePulseLinkMaterialProperty;\r\nCesium.PolylineTrailLinkMaterialProperty = PolylineTrailLinkMaterialProperty;\r\nCesium.ElliposidFadeMaterialProperty = ElliposidFadeMaterialProperty;\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Material/Material.js","import Cesium from 'Cesium';\r\nimport {util} from '../../Core/util';\r\n\r\nvar Color = Cesium.Color;\r\nvar defaultValue = Cesium.defaultValue;\r\nvar defined = Cesium.defined;\r\nvar defineProperties = Cesium.defineProperties;\r\nvar Event = Cesium.Event;\r\nvar createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\nvar Property = Cesium.Property;\r\nvar Material = Cesium.Material;\r\n\r\nvar defaultColor = Color.WHITE;\r\n\r\nfunction PolylineAttackLinkMaterialProperty(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    this._definitionChanged = new Event();\r\n    this._color = undefined;\r\n    this._colorSubscription = undefined;\r\n\r\n    this.color = options.color;\r\n    this.duration = options.duration || 1000;\r\n\r\n    this._time = undefined;\r\n}\r\n\r\ndefineProperties(PolylineAttackLinkMaterialProperty.prototype, {\r\n    /**\r\n     * Gets a value indicating if this property is constant.  A property is considered\r\n     * constant if getValue always returns the same result for the current definition.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Boolean}\r\n     * @readonly\r\n     */\r\n    isConstant: {\r\n        get: function () {\r\n            return false;\r\n        }\r\n    },\r\n    /**\r\n     * Gets the event that is raised whenever the definition of this property changes.\r\n     * The definition is considered to have changed if a call to getValue would return\r\n     * a different result for the same time.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Event}\r\n     * @readonly\r\n     */\r\n    definitionChanged: {\r\n        get: function () {\r\n            return this._definitionChanged;\r\n        }\r\n    },\r\n    /**\r\n     * Gets or sets the Property specifying the {@link Color} of the line.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Property}\r\n     */\r\n    color: createPropertyDescriptor('color')\r\n});\r\n\r\n/**\r\n * Gets the {@link Material} type at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the type.\r\n * @returns {String} The type of material.\r\n */\r\nPolylineAttackLinkMaterialProperty.prototype.getType = function (time) {\r\n    return Material.PolylineAttackLinkType;\r\n};\r\n\r\n/**\r\n * Gets the value of the property at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the value.\r\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\r\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\r\n */\r\nPolylineAttackLinkMaterialProperty.prototype.getValue = function (time, result) {\r\n    if (!defined(result)) {\r\n        result = {};\r\n    }\r\n    result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\r\n    result.image = Material.PolylineAttackLinkImage;\r\n    if (this._time === undefined) {\r\n        this._time = time.secondsOfDay;\r\n    }\r\n    // result.time = time.secondsOfDay - this._time;\r\n    result.time = (time.secondsOfDay - this._time) * 1000 / this.duration;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compares this property to the provided property and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {Property} [other] The other property.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nPolylineAttackLinkMaterialProperty.prototype.equals = function (other) {\r\n    return this === other || //\r\n        (other instanceof PolylineAttackLinkMaterialProperty &&\r\n        Property.equals(this._color, other._color));\r\n};\r\n\r\nexport {PolylineAttackLinkMaterialProperty};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Material/MaterialProperty/PolylineAttackLinkMaterialProperty.js","import Cesium from 'Cesium';\r\nimport {util} from '../../Core/util';\r\n\r\nlet Color = Cesium.Color;\r\nlet defaultValue = Cesium.defaultValue;\r\nlet defined = Cesium.defined;\r\nlet defineProperties = Cesium.defineProperties;\r\nlet Event = Cesium.Event;\r\nlet createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\nlet Property = Cesium.Property;\r\nlet Material = Cesium.Material;\r\n\r\nlet defaultColor = Color.WHITE;\r\n\r\nfunction PolylineArrowLinkMaterialProperty(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    this._definitionChanged = new Event();\r\n    this._color = undefined;\r\n    this._colorSubscription = undefined;\r\n\r\n    this.color = options.color;\r\n    this.duration = options.duration || 1000;\r\n\r\n    this._time = undefined;\r\n}\r\n\r\ndefineProperties(PolylineArrowLinkMaterialProperty.prototype, {\r\n    /**\r\n     * Gets a value indicating if this property is constant.  A property is considered\r\n     * constant if getValue always returns the same result for the current definition.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Boolean}\r\n     * @readonly\r\n     */\r\n    isConstant: {\r\n        get: function () {\r\n            return false;\r\n        }\r\n    },\r\n    /**\r\n     * Gets the event that is raised whenever the definition of this property changes.\r\n     * The definition is considered to have changed if a call to getValue would return\r\n     * a different result for the same time.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Event}\r\n     * @readonly\r\n     */\r\n    definitionChanged: {\r\n        get: function () {\r\n            return this._definitionChanged;\r\n        }\r\n    },\r\n    /**\r\n     * Gets or sets the Property specifying the {@link Color} of the line.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Property}\r\n     */\r\n    color: createPropertyDescriptor('color')\r\n});\r\n\r\n/**\r\n * Gets the {@link Material} type at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the type.\r\n * @returns {String} The type of material.\r\n */\r\nPolylineArrowLinkMaterialProperty.prototype.getType = function (time) {\r\n    return Material.PolylineArrowLinkType;\r\n};\r\n\r\n/**\r\n * Gets the value of the property at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the value.\r\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\r\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\r\n */\r\nPolylineArrowLinkMaterialProperty.prototype.getValue = function (time, result) {\r\n    if (!defined(result)) {\r\n        result = {};\r\n    }\r\n    result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\r\n    result.image = Material.PolylineArrowLinkImage;\r\n    if (this._time === undefined) {\r\n        this._time = time.secondsOfDay;\r\n    }\r\n    result.time = (time.secondsOfDay - this._time) * 1000 / this.duration;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compares this property to the provided property and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {Property} [other] The other property.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nPolylineArrowLinkMaterialProperty.prototype.equals = function (other) {\r\n    return this === other || //\r\n        (other instanceof PolylineArrowLinkMaterialProperty &&\r\n        Property.equals(this._color, other._color));\r\n};\r\n\r\nexport {PolylineArrowLinkMaterialProperty};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Material/MaterialProperty/PolylineArrowLinkMaterialProperty.js","import Cesium from 'Cesium';\r\n\r\nlet Color = Cesium.Color;\r\nlet defaultValue = Cesium.defaultValue;\r\nlet defined = Cesium.defined;\r\nlet defineProperties = Cesium.defineProperties;\r\nlet Event = Cesium.Event;\r\nlet createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\nlet Property = Cesium.Property;\r\nlet Material = Cesium.Material;\r\n\r\nlet defaultColor = Color.WHITE;\r\n\r\nfunction PolylineGlowLinkMaterialProperty(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    this._definitionChanged = new Event();\r\n    this._color = undefined;\r\n    this._colorSubscription = undefined;\r\n\r\n    this.color = options.color;\r\n}\r\n\r\ndefineProperties(PolylineGlowLinkMaterialProperty.prototype, {\r\n    /**\r\n     * Gets a value indicating if this property is constant.  A property is considered\r\n     * constant if getValue always returns the same result for the current definition.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Boolean}\r\n     * @readonly\r\n     */\r\n    isConstant: {\r\n        get: function () {\r\n            return false;\r\n        }\r\n    },\r\n    /**\r\n     * Gets the event that is raised whenever the definition of this property changes.\r\n     * The definition is considered to have changed if a call to getValue would return\r\n     * a different result for the same time.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Event}\r\n     * @readonly\r\n     */\r\n    definitionChanged: {\r\n        get: function () {\r\n            return this._definitionChanged;\r\n        }\r\n    },\r\n    /**\r\n     * Gets or sets the Property specifying the {@link Color} of the line.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Property}\r\n     */\r\n    color: createPropertyDescriptor('color')\r\n});\r\n\r\n/**\r\n * Gets the {@link Material} type at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the type.\r\n * @returns {String} The type of material.\r\n */\r\nPolylineGlowLinkMaterialProperty.prototype.getType = function (time) {\r\n    return Material.PolylineGrowLinkType;\r\n};\r\n\r\n/**\r\n * Gets the value of the property at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the value.\r\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\r\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\r\n */\r\nPolylineGlowLinkMaterialProperty.prototype.getValue = function (time, result) {\r\n    if (!defined(result)) {\r\n        result = {};\r\n    }\r\n    result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compares this property to the provided property and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {Property} [other] The other property.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nPolylineGlowLinkMaterialProperty.prototype.equals = function (other) {\r\n    return this === other || //\r\n        (other instanceof PolylineGlowLinkMaterialProperty &&\r\n        Property.equals(this._color, other._color));\r\n};\r\n\r\nexport {PolylineGlowLinkMaterialProperty};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Material/MaterialProperty/PolylineGlowLinkMaterialProperty.js","import Cesium from 'Cesium';\r\nimport {util} from '../../Core/util';\r\n\r\nlet Color = Cesium.Color;\r\nlet defaultValue = Cesium.defaultValue;\r\nlet defined = Cesium.defined;\r\nlet defineProperties = Cesium.defineProperties;\r\nlet Event = Cesium.Event;\r\nlet createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\nlet Property = Cesium.Property;\r\nlet Material = Cesium.Material;\r\n\r\nlet defaultColor = Color.WHITE;\r\n\r\nfunction PolylinePulseLinkMaterialProperty(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    this._definitionChanged = new Event();\r\n    this._color = undefined;\r\n    this._colorSubscription = undefined;\r\n\r\n    this.color = options.color;\r\n\r\n    this.duration = options.duration || 1000;\r\n\r\n    this._time = undefined;\r\n}\r\n\r\ndefineProperties(PolylinePulseLinkMaterialProperty.prototype, {\r\n    /**\r\n     * Gets a value indicating if this property is constant.  A property is considered\r\n     * constant if getValue always returns the same result for the current definition.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Boolean}\r\n     * @readonly\r\n     */\r\n    isConstant: {\r\n        get: function () {\r\n            return false;\r\n        }\r\n    },\r\n    /**\r\n     * Gets the event that is raised whenever the definition of this property changes.\r\n     * The definition is considered to have changed if a call to getValue would return\r\n     * a different result for the same time.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Event}\r\n     * @readonly\r\n     */\r\n    definitionChanged: {\r\n        get: function () {\r\n            return this._definitionChanged;\r\n        }\r\n    },\r\n    /**\r\n     * Gets or sets the Property specifying the {@link Color} of the line.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Property}\r\n     */\r\n    color: createPropertyDescriptor('color')\r\n});\r\n\r\n/**\r\n * Gets the {@link Material} type at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the type.\r\n * @returns {String} The type of material.\r\n */\r\nPolylinePulseLinkMaterialProperty.prototype.getType = function (time) {\r\n    return Material.PolylinePulseLinkType;\r\n};\r\n\r\n/**\r\n * Gets the value of the property at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the value.\r\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\r\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\r\n */\r\nPolylinePulseLinkMaterialProperty.prototype.getValue = function (time, result) {\r\n    if (!defined(result)) {\r\n        result = {};\r\n    }\r\n    result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\r\n    result.image = Material.PolylinePulseLinkImage;\r\n    if (this._time === undefined) {\r\n        this._time = time.secondsOfDay;\r\n    }\r\n    result.time = (time.secondsOfDay - this._time) * 1000 / this.duration;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compares this property to the provided property and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {Property} [other] The other property.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nPolylinePulseLinkMaterialProperty.prototype.equals = function (other) {\r\n    return this === other || //\r\n        (other instanceof PolylinePulseLinkMaterialProperty &&\r\n        Property.equals(this._color, other._color));\r\n};\r\n\r\nexport {PolylinePulseLinkMaterialProperty};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Material/MaterialProperty/PolylinePulseLinkMaterialProperty.js","import Cesium from 'Cesium';\r\nimport {util} from '../../Core/util';\r\n\r\nvar Color = Cesium.Color;\r\nvar defaultValue = Cesium.defaultValue;\r\nvar defined = Cesium.defined;\r\nvar defineProperties = Cesium.defineProperties;\r\nvar Event = Cesium.Event;\r\nvar createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\nvar Property = Cesium.Property;\r\nvar Material = Cesium.Material;\r\n\r\nvar defaultColor = Color.WHITE;\r\n\r\nfunction PolylineTrailLinkMaterialProperty(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    this._definitionChanged = new Event();\r\n    this._color = undefined;\r\n    this._colorSubscription = undefined;\r\n\r\n    this.color = options.color;\r\n\r\n    this._time = undefined;\r\n}\r\n\r\ndefineProperties(PolylineTrailLinkMaterialProperty.prototype, {\r\n    /**\r\n     * Gets a value indicating if this property is constant.  A property is considered\r\n     * constant if getValue always returns the same result for the current definition.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Boolean}\r\n     * @readonly\r\n     */\r\n    isConstant: {\r\n        get: function () {\r\n            return false;\r\n        }\r\n    },\r\n    /**\r\n     * Gets the event that is raised whenever the definition of this property changes.\r\n     * The definition is considered to have changed if a call to getValue would return\r\n     * a different result for the same time.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Event}\r\n     * @readonly\r\n     */\r\n    definitionChanged: {\r\n        get: function () {\r\n            return this._definitionChanged;\r\n        }\r\n    },\r\n    /**\r\n     * Gets or sets the Property specifying the {@link Color} of the line.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Property}\r\n     */\r\n    color: createPropertyDescriptor('color')\r\n});\r\n\r\n/**\r\n * Gets the {@link Material} type at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the type.\r\n * @returns {String} The type of material.\r\n */\r\nPolylineTrailLinkMaterialProperty.prototype.getType = function (time) {\r\n    return Material.PolylineTrailLinkType;\r\n};\r\n\r\n/**\r\n * Gets the value of the property at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the value.\r\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\r\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\r\n */\r\nPolylineTrailLinkMaterialProperty.prototype.getValue = function (time, result) {\r\n    if (!defined(result)) {\r\n        result = {};\r\n    }\r\n    result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\r\n    result.image = Material.PolylineTrailLinkImage;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compares this property to the provided property and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {Property} [other] The other property.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nPolylineTrailLinkMaterialProperty.prototype.equals = function (other) {\r\n    return this === other || //\r\n        (other instanceof PolylineTrailLinkMaterialProperty &&\r\n        Property.equals(this._color, other._color));\r\n};\r\n\r\nexport {PolylineTrailLinkMaterialProperty};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Material/MaterialProperty/PolylineTrailLinkMaterialProperty.js","import Cesium from 'Cesium';\r\nimport {util} from '../../Core/util';\r\n\r\nvar Color = Cesium.Color;\r\nvar defaultValue = Cesium.defaultValue;\r\nvar defined = Cesium.defined;\r\nvar defineProperties = Cesium.defineProperties;\r\nvar Event = Cesium.Event;\r\nvar createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\nvar Property = Cesium.Property;\r\nvar Material = Cesium.Material;\r\n\r\nvar defaultColor = Color.WHITE;\r\n\r\nfunction PolylineTrailMaterialProperty(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    this._definitionChanged = new Event();\r\n    this._color = undefined;\r\n    this._colorSubscription = undefined;\r\n\r\n    this.color = options.color;\r\n    this.duration = options.duration || 1000;\r\n\r\n    this._time = undefined;\r\n}\r\n\r\ndefineProperties(PolylineTrailMaterialProperty.prototype, {\r\n    /**\r\n     * Gets a value indicating if this property is constant.  A property is considered\r\n     * constant if getValue always returns the same result for the current definition.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Boolean}\r\n     * @readonly\r\n     */\r\n    isConstant: {\r\n        get: function () {\r\n            return false;\r\n        }\r\n    },\r\n    /**\r\n     * Gets the event that is raised whenever the definition of this property changes.\r\n     * The definition is considered to have changed if a call to getValue would return\r\n     * a different result for the same time.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Event}\r\n     * @readonly\r\n     */\r\n    definitionChanged: {\r\n        get: function () {\r\n            return this._definitionChanged;\r\n        }\r\n    },\r\n    /**\r\n     * Gets or sets the Property specifying the {@link Color} of the line.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Property}\r\n     */\r\n    color: createPropertyDescriptor('color')\r\n});\r\n\r\n/**\r\n * Gets the {@link Material} type at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the type.\r\n * @returns {String} The type of material.\r\n */\r\nPolylineTrailMaterialProperty.prototype.getType = function (time) {\r\n    return Material.PolylineTrailType;\r\n};\r\n\r\n/**\r\n * Gets the value of the property at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the value.\r\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\r\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\r\n */\r\nPolylineTrailMaterialProperty.prototype.getValue = function (time, result) {\r\n    if (!defined(result)) {\r\n        result = {};\r\n    }\r\n    result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\r\n    result.image = Material.PolylineTrailImage;\r\n    if (this._time === undefined) {\r\n        this._time = time.secondsOfDay;\r\n    }\r\n    // result.time = time.secondsOfDay - this._time;\r\n    result.time = (time.secondsOfDay - this._time) * 1000 / this.duration;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compares this property to the provided property and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {Property} [other] The other property.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nPolylineTrailMaterialProperty.prototype.equals = function (other) {\r\n    return this === other || //\r\n        (other instanceof PolylineTrailMaterialProperty &&\r\n        Property.equals(this._color, other._color));\r\n};\r\n\r\nexport {PolylineTrailMaterialProperty};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Material/MaterialProperty/PolylineTrailMaterialProperty.js","import Cesium from 'Cesium';\r\nimport {util} from '../../Core/util';\r\n\r\nvar Color = Cesium.Color;\r\nvar defaultValue = Cesium.defaultValue;\r\nvar defined = Cesium.defined;\r\nvar defineProperties = Cesium.defineProperties;\r\nvar Event = Cesium.Event;\r\nvar createPropertyDescriptor = Cesium.createPropertyDescriptor;\r\nvar Property = Cesium.Property;\r\nvar Material = Cesium.Material;\r\n\r\nvar defaultColor = Color.WHITE;\r\n\r\nfunction ElliposidFadeMaterialProperty(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    this._definitionChanged = new Event();\r\n    this._color = undefined;\r\n    this._colorSubscription = undefined;\r\n\r\n    this.color = options.color;\r\n\r\n    this._time = undefined;\r\n}\r\n\r\ndefineProperties(ElliposidFadeMaterialProperty.prototype, {\r\n    /**\r\n     * Gets a value indicating if this property is constant.  A property is considered\r\n     * constant if getValue always returns the same result for the current definition.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Boolean}\r\n     * @readonly\r\n     */\r\n    isConstant: {\r\n        get: function () {\r\n            return false;\r\n        }\r\n    },\r\n    /**\r\n     * Gets the event that is raised whenever the definition of this property changes.\r\n     * The definition is considered to have changed if a call to getValue would return\r\n     * a different result for the same time.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Event}\r\n     * @readonly\r\n     */\r\n    definitionChanged: {\r\n        get: function () {\r\n            return this._definitionChanged;\r\n        }\r\n    },\r\n    /**\r\n     * Gets or sets the Property specifying the {@link Color} of the line.\r\n     * @memberof PolylineGlowMaterialProperty.prototype\r\n     * @type {Property}\r\n     */\r\n    color: createPropertyDescriptor('color')\r\n});\r\n\r\n/**\r\n * Gets the {@link Material} type at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the type.\r\n * @returns {String} The type of material.\r\n */\r\nElliposidFadeMaterialProperty.prototype.getType = function (time) {\r\n    return Material.EllipsoidFadeType;\r\n};\r\n\r\n/**\r\n * Gets the value of the property at the provided time.\r\n *\r\n * @param {JulianDate} time The time for which to retrieve the value.\r\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\r\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\r\n */\r\nElliposidFadeMaterialProperty.prototype.getValue = function (time, result) {\r\n    if (!defined(result)) {\r\n        result = {};\r\n    }\r\n    result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\r\n\r\n    if (this._time === undefined) {\r\n        this._time = time.secondsOfDay;\r\n    }\r\n    result.time = time.secondsOfDay - this._time;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compares this property to the provided property and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {Property} [other] The other property.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nElliposidFadeMaterialProperty.prototype.equals = function (other) {\r\n    return this === other || //\r\n        (other instanceof ElliposidFadeMaterialProperty &&\r\n            Property.equals(this._color, other._color));\r\n};\r\n\r\nexport {ElliposidFadeMaterialProperty};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./Source/Material/MaterialProperty/ElliposidFadeMaterialProperty.js","module.exports = \"czm_material czm_getMaterial(czm_materialInput materialInput)\\r\\n{\\r\\n    czm_material material = czm_getDefaultMaterial(materialInput);\\r\\n    vec2 st = materialInput.st;\\r\\n\\r\\n    if(texture2D(image, vec2(0.0, 0.0)).a == 1.0){\\r\\n        discard;\\r\\n    }else{\\r\\n        material.alpha = texture2D(image, vec2(1.0 - fract(time - st.s), st.t)).a * color.a;\\r\\n    }\\r\\n\\r\\n    material.diffuse = max(color.rgb * material.alpha * 3.0, color.rgb);\\r\\n\\r\\n    return material;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Source/Material/Shaders/polylineLinkMaterial.glsl\n// module id = 25\n// module chunks = 0","module.exports = \"czm_material czm_getMaterial(czm_materialInput materialInput)\\r\\n{\\r\\n    czm_material material = czm_getDefaultMaterial(materialInput);\\r\\n    vec2 st = materialInput.st;\\r\\n\\r\\n    if(texture2D(image, vec2(0.0, 0.0)).a == 1.0){\\r\\n        discard;\\r\\n    }else{\\r\\n         material.alpha = texture2D(image, vec2(1.0 - fract(time - st.s), st.t)).a * color.a;\\r\\n    }\\r\\n\\r\\n    material.diffuse = max(color.rgb * material.alpha * 10.0, color.rgb);\\r\\n\\r\\n    return material;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Source/Material/Shaders/polylinePulseMaterial.glsl\n// module id = 26\n// module chunks = 0","module.exports = \"uniform vec4 color;\\r\\nuniform float glowPower;\\r\\n\\r\\nvarying float v_width;\\r\\n\\r\\nczm_material czm_getMaterial(czm_materialInput materialInput)\\r\\n{\\r\\n    czm_material material = czm_getDefaultMaterial(materialInput);\\r\\n\\r\\n    vec2 st = materialInput.st;\\r\\n    float glow = glowPower / abs(st.t - 0.5) - (glowPower / 0.5);\\r\\n\\r\\n    material.emission = max(vec3(glow - 1.0 + color.rgb), color.rgb);\\r\\n    material.alpha = clamp(0.0, 1.0, glow) * color.a * st.s;\\r\\n\\r\\n    //material.emission =  color.rgb;\\r\\n    //material.alpha =  color.a;\\r\\n\\r\\n    return material;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Source/Material/Shaders/polylineGlowMaterial.glsl\n// module id = 27\n// module chunks = 0","module.exports = \"czm_material czm_getMaterial(czm_materialInput materialInput)\\r\\n{\\r\\n    czm_material material = czm_getDefaultMaterial(materialInput);\\r\\n    vec2 st = materialInput.st;\\r\\n\\r\\n    if(texture2D(image, vec2(0.0, 0.0)).a == 1.0){\\r\\n        discard;\\r\\n    }else{\\r\\n         material.alpha = texture2D(image, st).a * color.a;\\r\\n    }\\r\\n\\r\\n   /* if(texture2D(image, st).a > 0.9){\\r\\n       material.diffuse = vec3(1.0);\\r\\n    }else{\\r\\n     material.diffuse = color.rgb;\\r\\n    }*/\\r\\n\\r\\n    material.diffuse = max( material.diffuse* material.alpha * 3.0,  material.diffuse);\\r\\n\\r\\n    return material;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Source/Material/Shaders/polylineTrailMaterial.glsl\n// module id = 28\n// module chunks = 0","module.exports = \"czm_material czm_getMaterial(czm_materialInput materialInput)\\r\\n{\\r\\n    czm_material material = czm_getDefaultMaterial(materialInput);\\r\\n    material.diffuse = 1.5 * color.rgb;\\r\\n\\r\\n    vec2 st = materialInput.st;\\r\\n    float dis = distance(st, vec2(0.5, 0.5));\\r\\n\\r\\n    float per = fract(time);\\r\\n    if(dis > per * 0.5){\\r\\n       //material.alpha = 0.0;\\r\\n       discard;\\r\\n    }else {\\r\\n         material.alpha = color.a  * dis / per / 2.0;\\r\\n    }\\r\\n    return material;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Source/Material/Shaders/ElliposidFadeMaterial.glsl\n// module id = 29\n// module chunks = 0","import Cesium from 'Cesium';\r\n\r\n/**\r\n * 计算链路的点集\r\n * @param startPoint 开始节点\r\n * @param endPoint 结束节点\r\n * @param angularityFactor 曲率\r\n * @param numOfSingleLine 点集数量\r\n * @returns {Array}\r\n */\r\nexport function getLinkedPointList(startPoint, endPoint, angularityFactor, numOfSingleLine) {\r\n    var result = [];\r\n\r\n\r\n    var startPosition = Cesium.Cartographic.fromCartesian(startPoint);\r\n    var endPosition = Cesium.Cartographic.fromCartesian(endPoint);\r\n\r\n    var startLon = startPosition.longitude * 180 / Math.PI;\r\n    var startLat = startPosition.latitude * 180 / Math.PI;\r\n    var endLon = endPosition.longitude * 180 / Math.PI;\r\n    var endLat = endPosition.latitude * 180 / Math.PI;\r\n\r\n    var dist = Math.sqrt((startLon - endLon) * (startLon - endLon) + (startLat - endLat) * (startLat - endLat));\r\n\r\n\r\n    //var dist = Cesium.Cartesian3.distance(startPoint, endPoint);\r\n    var angularity = dist * angularityFactor;\r\n\r\n    var startVec = Cesium.Cartesian3.clone(startPoint);\r\n    var endVec = Cesium.Cartesian3.clone(endPoint);\r\n\r\n    var startLength = Cesium.Cartesian3.distance(startVec, Cesium.Cartesian3.ZERO);\r\n    var endLength = Cesium.Cartesian3.distance(endVec, Cesium.Cartesian3.ZERO);\r\n\r\n    Cesium.Cartesian3.normalize(startVec, startVec);\r\n    Cesium.Cartesian3.normalize(endVec, endVec);\r\n\r\n    if (Cesium.Cartesian3.distance(startVec, endVec) == 0) {\r\n        return result;\r\n    }\r\n\r\n    //var cosOmega = Cesium.Cartesian3.dot(startVec, endVec);\r\n    //var omega = Math.acos(cosOmega);\r\n\r\n    var omega = Cesium.Cartesian3.angleBetween(startVec, endVec);\r\n\r\n    result.push(startPoint);\r\n    for (var i = 1; i < numOfSingleLine - 1; i++) {\r\n        var t = i * 1.0 / (numOfSingleLine - 1);\r\n        var invT = 1 - t;\r\n\r\n        var startScalar = Math.sin(invT * omega) / Math.sin(omega);\r\n        var endScalar = Math.sin(t * omega) / Math.sin(omega);\r\n\r\n        var startScalarVec = Cesium.Cartesian3.multiplyByScalar(startVec, startScalar, new Cesium.Cartesian3());\r\n        var endScalarVec = Cesium.Cartesian3.multiplyByScalar(endVec, endScalar, new Cesium.Cartesian3());\r\n\r\n        var centerVec = Cesium.Cartesian3.add(startScalarVec, endScalarVec, new Cesium.Cartesian3());\r\n\r\n        var ht = t * Math.PI;\r\n        var centerLength = startLength * invT + endLength * t + Math.sin(ht) * angularity;\r\n        centerVec = Cesium.Cartesian3.multiplyByScalar(centerVec, centerLength, centerVec);\r\n\r\n        result.push(centerVec);\r\n    }\r\n\r\n    result.push(endPoint);\r\n\r\n    return result;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Source/Core/getLinkedPointList.js"],"sourceRoot":""}